{"version":3,"sources":["../webpack/bootstrap",".././extension/connection/index.ts",".././extension/connection/src/commands/index.ts",".././extension/connection/src/commands/src/connection-create.ts",".././extension/connection/src/commands/src/connection-settings.ts",".././extension/connection/src/settings/index.ts",".././extension/connection/src/settings/src/connection.view.ts",".././extension/connection/src/utils/index.ts",".././extension/connection/src/utils/src/connection.service.ts",".././extension/enigma/index.ts",".././extension/enigma/src/utils/index.ts",".././extension/enigma/src/utils/src/enigma-session.ts",".././extension/main.ts",".././extension/qixfs-entry/index.ts",".././extension/qixfs-entry/src/directory/app-script.ts",".././extension/qixfs-entry/src/directory/app.ts",".././extension/qixfs-entry/src/directory/documents.ts",".././extension/qixfs-entry/src/entry.ts",".././extension/qixfs-entry/src/file/qlik-script.ts",".././extension/qixfs/src/model/index.ts",".././extension/qixfs/src/model/src/workspace-folder.ts",".././extension/qixfs/src/utils/index.ts",".././extension/qixfs/src/utils/src/qix-fs.provider.ts",".././extension/qixfs/src/utils/src/router.ts",".././extension/qixfs/src/utils/src/workspace-folder-manager.ts",".././extension/utils/index.ts",".././extension/utils/src/session-cache.ts",".././node_modules/enigma.js/enigma.js",".././node_modules/enigma.js/sense-utilities.js",".././node_modules/ws/index.js",".././node_modules/ws/lib/buffer-util.js",".././node_modules/ws/lib/constants.js",".././node_modules/ws/lib/event-target.js",".././node_modules/ws/lib/extension.js",".././node_modules/ws/lib/limiter.js",".././node_modules/ws/lib/permessage-deflate.js",".././node_modules/ws/lib/receiver.js",".././node_modules/ws/lib/sender.js",".././node_modules/ws/lib/stream.js",".././node_modules/ws/lib/validation.js",".././node_modules/ws/lib/websocket-server.js",".././node_modules/ws/lib/websocket.js","../external \"crypto\"","../external \"events\"","../external \"fs\"","../external \"http\"","../external \"https\"","../external \"net\"","../external \"path\"","../external \"stream\"","../external \"tls\"","../external \"url\"","../external \"vscode\"","../external \"zlib\""],"names":[],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,oEAAgB;AACjC;;;;;;;;;;;;;ACNa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,6FAAyB;AAC1C,SAAS,mBAAO,CAAC,iGAA2B;;;;;;;;;;;;;ACN/B;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,4BAA4B,mBAAO,CAAC,sBAAQ;AAC5C,gBAAgB,mBAAO,CAAC,8DAAa;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gBAAgB,GAAG,gBAAgB,GAAG,gBAAgB;AAC5E;AACA,SAAS;AACT,oEAAoE,mCAAmC;AACvG;AACA,4BAA4B,0BAA0B,GAAG,0BAA0B;AACnF,kDAAkD,KAAK;AACvD,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA,wEAAwE,eAAe;AACvF;AACA;AACA,KAAK;AACL;AACA;;;;;;;;;;;;;AClDa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,oEAAgB;AAC3C;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACPa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,yFAAuB;;;;;;;;;;;;;ACLxC,iDAAa;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,4BAA4B,mBAAO,CAAC,sBAAQ;AAC5C,0BAA0B,mBAAO,CAAC,kBAAM;AACxC,wBAAwB,mBAAO,CAAC,cAAI;AACpC,gBAAgB,mBAAO,CAAC,8DAAa;AACrC;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yIAAyI,sBAAsB;AAC/J;AACA,gEAAgE,mBAAmB;AACnF;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,uCAAuC,iCAAiC;AACxE;AACA;AACA;;;;;;;;;;;;;;AChFa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,4FAA0B;;;;;;;;;;;;;ACL9B;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,sBAAQ;AACjC,gBAAgB,mBAAO,CAAC,qDAAmB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,6DAA6D,EAAE;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrDa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,0DAAa;;;;;;;;;;;;;ACLjB;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,gFAAsB;;;;;;;;;;;;;ACL1B;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA,4CAA4C;AAC5C;AACA,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,qDAAW;AACvC,0BAA0B,mBAAO,CAAC,8EAA2B;AAC7D,wCAAwC,mBAAO,CAAC,qFAAgC;AAChF,6BAA6B,mBAAO,CAAC,sCAAI;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,qFAAqF;AAC7I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;;;;;;;;;;;AC3La;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,mBAAO,CAAC,6CAAU;AAClB,4BAA4B,mBAAO,CAAC,sBAAQ;AAC5C,qBAAqB,mBAAO,CAAC,qDAAc;AAC3C,gBAAgB,mBAAO,CAAC,0DAAc;AACtC,gBAAgB,mBAAO,CAAC,oDAAkB;AAC1C,uBAAuB,mBAAO,CAAC,sDAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F,wBAAwB;AACtH,KAAK;AACL;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7Da;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,yEAAqB;AACtC,SAAS,mBAAO,CAAC,uFAA4B;AAC7C,SAAS,mBAAO,CAAC,qFAA2B;AAC5C,SAAS,mBAAO,CAAC,+EAAwB;AACzC,SAAS,mBAAO,CAAC,yDAAa;;;;;;;;;;;;;ACTjB;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,sDAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBa;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,sDAAU;AAClC,4BAA4B,mBAAO,CAAC,sBAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChDa;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,4BAA4B,mBAAO,CAAC,sBAAQ;AAC5C,gBAAgB,mBAAO,CAAC,sDAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5Da;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,4BAA4B,mBAAO,CAAC,sBAAQ;AAC5C,gBAAgB,mBAAO,CAAC,0DAAc;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/Ca;AACb,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,sDAAU;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,mFAAwB;;;;;;;;;;;;;ACL5B;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,sDAAmB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACtBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,iFAAuB;AACxC,SAAS,mBAAO,CAAC,mGAAgC;AACjD,SAAS,mBAAO,CAAC,+DAAc;;;;;;;;;;;;;ACPlB;AACb;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,4BAA4B,mBAAO,CAAC,sBAAQ;AAC5C,iBAAiB,mBAAO,CAAC,2DAAU;AACnC,eAAe,mBAAO,CAAC,kBAAM;AAC7B;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,uCAAuC;AAC/E;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClGa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,QAAQ,iHAAiH,EAAE,IAAI;AAC9M;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,YAAY,UAAU;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnFa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,0DAAc;AACtC,4BAA4B,mBAAO,CAAC,sBAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,YAAY,GAAG,YAAY;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChFa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,mEAAqB;;;;;;;;;;;;;ACLzB;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,KAA4D;AAC9D,EAAE,SACoD;AACtD,CAAC,qBAAqB;;AAEtB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,iBAAiB,SAAS;AAC1B;;AAEA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL,sBAAsB,SAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA,yBAAyB,2EAA2E,kCAAkC,mBAAmB,GAAG,EAAE,OAAO,kCAAkC,8HAA8H,GAAG,EAAE,qBAAqB;;AAE/V,mDAAmD,0CAA0C,0DAA0D,EAAE;;AAEzJ,mDAAmD,0EAA0E,aAAa,EAAE,qCAAqC;;AAEjL,yCAAyC,uBAAuB,uFAAuF,EAAE,aAAa;;AAEtK,4CAA4C,+DAA+D,2EAA2E,EAAE,yEAAyE,eAAe,sDAAsD,EAAE,EAAE,uDAAuD;;AAEjY,oCAAoC,gEAAgE,sDAAsD,+DAA+D,mCAAmC,2EAA2E,EAAE,qCAAqC,iDAAiD,4BAA4B,EAAE,qBAAqB,wEAAwE,EAAE,qDAAqD,eAAe,wEAAwE,EAAE,EAAE,wCAAwC,GAAG,gCAAgC;;AAEvvB,uCAAuC,wEAAwE,0CAA0C,8CAA8C,MAAM,wEAAwE,GAAG,aAAa,EAAE,YAAY,cAAc,EAAE;;AAEnU,4CAA4C,kCAAkC,gCAAgC,EAAE,OAAO,wDAAwD,gBAAgB,uBAAuB,kDAAkD,kCAAkC,uDAAuD,iBAAiB,GAAG,EAAE,0CAA0C;;AAEja,kCAAkC,mEAAmE;;AAErG,kCAAkC,4EAA4E,iBAAiB,UAAU,GAAG,8BAA8B;;AAE1K,+BAA+B,gGAAgG,gDAAgD,GAAG,2BAA2B;;AAE7M;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,eAAe;AACf;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA,cAAc;AACd;AACA;AACA;;AAEA,4CAA4C,gCAAgC,oCAAoC,oDAAoD,8DAA8D,gEAAgE,EAAE,EAAE,gCAAgC,EAAE,aAAa;;AAErV,kCAAkC,gBAAgB,sBAAsB,OAAO,uDAAuD,aAAa,uDAAuD,2CAA2C,EAAE,EAAE,EAAE,6CAA6C,2EAA2E,EAAE,OAAO,iDAAiD,kFAAkF,EAAE,EAAE,EAAE,EAAE,eAAe;;AAEthB,6CAA6C,kBAAkB,kCAAkC,qEAAqE,EAAE,EAAE,OAAO,kBAAkB,EAAE,YAAY;;AAEjN,qDAAqD,0CAA0C,0DAA0D,EAAE;;AAE3J,6CAA6C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE;;AAE7T,+DAA+D,sEAAsE,8DAA8D,oBAAoB;AACvN;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,cAAc,MAAM;AACpB;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,MAAM;AACtB;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,mBAAmB,OAAO;AAC1B,mBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB,iBAAiB,OAAO;AACxB;AACA,iBAAiB,OAAO;AACxB,mBAAmB,EAAE;AACrB;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,gBAAgB;AAClC;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,kBAAkB,OAAO;AACzB;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qCAAqC,4BAA4B,oBAAoB;AACrF;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;AACA,kBAAkB,gBAAgB;AAClC;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,kBAAkB,gBAAgB;AAClC;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,kBAAkB,gBAAgB;AAClC;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,gBAAgB;AAChC,gBAAgB,OAAO;AACvB,gBAAgB,IAAI;AACpB;;AAEA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA,+EAA+E,aAAa;AAC5F;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH,qDAAqD,0CAA0C,0DAA0D,EAAE;;AAE3J,+CAA+C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE;;AAE/T,iEAAiE,wEAAwE,gEAAgE,oBAAoB;AAC7N;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,EAAE;AAChB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,EAAE;AAClB;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,kBAAkB,EAAE;AACpB;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM;AACxB;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB,kBAAkB,OAAO;AACzB;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH,qDAAqD,0CAA0C,0DAA0D,EAAE;;AAE3J,+CAA+C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE;;AAE/T,iEAAiE,wEAAwE,gEAAgE,oBAAoB;;AAE7N,2BAA2B,2EAA2E,oCAAoC,mBAAmB,GAAG,EAAE,OAAO,oCAAoC,8HAA8H,GAAG,EAAE,uBAAuB;AACvW;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA,aAAa,OAAO;AACpB,aAAa,EAAE;AACf;;;AAGA;AACA,4FAA4F,aAAa;AACzG;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,cAAc;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,mBAAmB,+BAA+B;AAClD;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,mBAAmB;AACnB,kDAAkD;AAClD;;AAEA,KAAK;AACL;AACA;AACA,kCAAkC;AAClC,6CAA6C;;AAE7C,kCAAkC;;AAElC,gDAAgD;;AAEhD;AACA;;AAEA;AACA,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA,gDAAgD;;AAEhD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oFAAoF,eAAe;AACnG;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,qDAAqD;AACrD;AACA,yDAAyD;AACzD;AACA;AACA;;AAEA;AACA,wFAAwF,eAAe;AACvG;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,IAAI;;AAEf;AACA,oFAAoF,eAAe;AACnG;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH,qDAAqD,0CAA0C,0DAA0D,EAAE;;AAE3J,+CAA+C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE;;AAE/T,iEAAiE,wEAAwE,gEAAgE,oBAAoB;AAC7N;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH,qDAAqD,0CAA0C,0DAA0D,EAAE;;AAE3J,+CAA+C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE;;AAE/T,iEAAiE,wEAAwE,gEAAgE,oBAAoB;AAC7N;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,gBAAgB,OAAO;AACvB;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,kBAAkB,OAAO;AACzB;;AAEA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B,gBAAgB,OAAO;AACvB,kBAAkB,SAAS;AAC3B;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,kBAAkB,OAAO;AACzB;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH,qDAAqD,0CAA0C,0DAA0D,EAAE;;AAE3J,+CAA+C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE;;AAE/T,iEAAiE,wEAAwE,gEAAgE,oBAAoB;AAC7N;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,gBAAgB;AAC9B,cAAc,IAAI;AAClB,cAAc,SAAS;AACvB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB;AACA,gBAAgB,OAAO;AACvB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,kBAAkB,OAAO;AACzB;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,MAAM;AACtB,gBAAgB,OAAO;AACvB,kBAAkB,OAAO;AACzB;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,MAAM;AACtB,gBAAgB,OAAO;AACvB,kBAAkB,OAAO;AACzB;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;;AAET;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,kBAAkB,gBAAgB;AAClC;AACA;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;;AAEA;;AAEA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,kBAAkB,OAAO;AACzB;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,kBAAkB,OAAO;AACzB;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS,YAAY;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,6BAA6B,kDAAkD;;AAE/E;AACA,QAAQ;AACR,6BAA6B,6BAA6B;AAC1D;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oCAAoC,iFAAiF;;AAErH,iCAAiC,wEAAwE;;AAEzG,mCAAmC,+HAA+H;;AAElK,oCAAoC,0BAA0B,8CAA8C,gBAAgB,OAAO,kBAAkB,EAAE,aAAa,EAAE;;AAEtK,2BAA2B,2EAA2E,oCAAoC,mBAAmB,GAAG,EAAE,OAAO,oCAAoC,8HAA8H,GAAG,EAAE,uBAAuB;AACvW;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;;;AAGA;AACA;AACA,wBAAwB;AACxB;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,QAAQ;AACtB;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,MAAM;AAClB,cAAc,MAAM;AACpB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA,iCAAiC,QAAQ;AACzC;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;;AAEA,qCAAqC,QAAQ;AAC7C;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA,cAAc,MAAM;AACpB;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,MAAM;AAClB;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;;AAEA,8CAA8C;;AAE9C;;AAEA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;;;AAGA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,2FAA2F;AAC3F;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA,gBAAgB,qBAAqB,oBAAoB;AACzD,gBAAgB,qBAAqB,aAAa;AAClD;AACA,WAAW,qBAAqB,aAAa;AAC7C;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,2BAA2B,2EAA2E,oCAAoC,mBAAmB,GAAG,EAAE,OAAO,oCAAoC,8HAA8H,GAAG,EAAE,uBAAuB;AACvW;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB,cAAc,cAAc;AAC5B;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,YAAY,MAAM;AAClB,cAAc,OAAO;AACrB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO,EAAE;;AAET;AACA;;AAEA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA,sCAAsC,uFAAuF;;AAE7H,mCAAmC,wEAAwE;;AAE3G,qCAAqC,+HAA+H;;AAEpK,sCAAsC,0BAA0B,8CAA8C,gBAAgB,OAAO,kBAAkB,EAAE,aAAa,EAAE;;AAExK,qDAAqD,0CAA0C,0DAA0D,EAAE;;AAE3J,+CAA+C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE;;AAE/T,iEAAiE,wEAAwE,gEAAgE,oBAAoB;AAC7N;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,gBAAgB;AAC9B,cAAc,SAAS;AACvB,cAAc,cAAc;AAC5B,cAAc,cAAc;AAC5B;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,cAAc,QAAQ;AACtB,cAAc,gBAAgB;AAC9B,gBAAgB;AAChB;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,gBAAgB;AAChC,gBAAgB,OAAO;AACvB,kBAAkB;AAClB;;AAEA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH,2BAA2B,2EAA2E,oCAAoC,mBAAmB,GAAG,EAAE,OAAO,oCAAoC,8HAA8H,GAAG,EAAE,uBAAuB;;AAEvW,qDAAqD,0CAA0C,0DAA0D,EAAE;;AAE3J,+CAA+C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE;;AAE/T,iEAAiE,wEAAwE,gEAAgE,oBAAoB;;AAE7N,qDAAqD,4EAA4E,aAAa,EAAE,uCAAuC;;AAEvL,2CAA2C,uBAAuB,uFAAuF,EAAE,aAAa;;AAExK,6CAA6C,qDAAqD,oBAAoB,EAAE,OAAO,mDAAmD,6CAA6C,mBAAmB,4DAA4D,gBAAgB,gCAAgC,EAAE,mBAAmB,GAAG,EAAE,mDAAmD;;AAE3a,6CAA6C,kEAAkE,oCAAoC,4BAA4B,EAAE,eAAe;;AAEhM,iCAAiC,kGAAkG,gDAAgD,GAAG,6BAA6B;;AAEnN,8CAA8C,+DAA+D,2EAA2E,EAAE,yEAAyE,eAAe,sDAAsD,EAAE,EAAE,yDAAyD;;AAErY,oCAAoC,8EAA8E,iBAAiB,UAAU,GAAG,gCAAgC;AAChL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,EAAE;AAClB,mBAAmB,QAAQ;AAC3B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,kBAAkB,EAAE;AACpB;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,MAAM;AACxB;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,kBAAkB,MAAM;AACxB;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH,qDAAqD,0CAA0C,0DAA0D,EAAE;;AAE3J,+CAA+C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE;;AAE/T,iEAAiE,wEAAwE,gEAAgE,oBAAoB;AAC7N;AACA;AACA;AACA,gBAAgB,OAAO;AACvB;AACA,gBAAgB,OAAO;AACvB,gBAAgB,SAAS;AACzB;AACA,gBAAgB,OAAO;AACvB,gBAAgB,QAAQ;AACxB;AACA,gBAAgB,aAAa;AAC7B;AACA,gBAAgB,MAAM;AACtB;AACA,gBAAgB,MAAM;AACtB;AACA,gBAAgB,OAAO,aAAa;AACpC,gBAAgB,QAAQ;AACxB;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC;AACA,gBAAgB,OAAO;AACvB;AACA,gBAAgB,OAAO;AACvB,gBAAgB,SAAS;AACzB;AACA;;AAEA;AACA;AACA;AACA;AACA,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB,gBAAgB,OAAO;AACvB;AACA,gBAAgB,QAAQ;AACxB,gBAAgB,OAAO;AACvB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B,kBAAkB,QAAQ;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B,kBAAkB,QAAQ;AAC1B;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB,cAAc;AAC9B;AACA;;AAEA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;;;AAGT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4GAA4G;;AAE5G;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,GAAG;;AAEH;;AAEA,CAAC;AACD;;;;;;;;;;;;;;;;;;;;;;;ACtiGA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC,KAA4D;AAC7D,CAAC,SAC4D;AAC7D,CAAC,qBAAqB;;AAEtB;AACA,mBAAmB,YAAY,EAAE;AACjC;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,SAAS;AAC3B;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV,QAAQ;AACR;AACA;AACA,MAAM;;AAEN;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA,kDAAkD,0CAA0C,0DAA0D,EAAE;;AAExJ,4CAA4C,gBAAgB,kBAAkB,OAAO,2BAA2B,wDAAwD,gCAAgC,uDAAuD,2DAA2D,EAAE;;AAE5T,8DAA8D,sEAAsE,8DAA8D,oBAAoB;AACtN;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO,cAAc;AACnC,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,mBAAmB;AAClC,iBAAiB,OAAO;AACxB;;AAEA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA,EAAE;;AAEF;;AAEA,CAAC;AACD;;;;;;;;;;;;;AC/Pa;;AAEb,kBAAkB,mBAAO,CAAC,2DAAiB;;AAE3C,kCAAkC,mBAAO,CAAC,qDAAc;AACxD,mBAAmB,mBAAO,CAAC,yEAAwB;AACnD,qBAAqB,mBAAO,CAAC,yDAAgB;AAC7C,mBAAmB,mBAAO,CAAC,qDAAc;;AAEzC;;;;;;;;;;;;;ACTa;;AAEb,OAAO,eAAe,GAAG,mBAAO,CAAC,uDAAa;;AAE9C;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY,OAAO;AACnB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,mBAAO,CAAC,oIAAY;AACzC;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjJa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACTa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,qCAAqC;AAClD,aAAa,UAAU;AACvB;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,UAAU;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,UAAU;AACvB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,UAAU;AACvB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACzKa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,wBAAwB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAQ,mBAAmB;AAC3B;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO,6BAA6B;AACpC;AACA,iEAAiE,EAAE;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA,OAAO;AACP,+DAA+D,EAAE;AACjE;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,iEAAiE,EAAE;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,+DAA+D,EAAE;AACjE;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE,EAAE;AACnE;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,iEAAiE,EAAE;AACnE;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,iEAAiE,EAAE;AACnE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP,+DAA+D,EAAE;AACjE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mDAAmD,EAAE,GAAG,EAAE;AAC1D,0BAA0B;AAC1B,eAAe;AACf;AACA,oBAAoB;AACpB,SAAS;AACT;AACA,KAAK;AACL;AACA;;AAEA,kBAAkB;;;;;;;;;;;;;AC9NL;;AAEb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACrDa;;AAEb,aAAa,mBAAO,CAAC,kBAAM;;AAE3B,mBAAmB,mBAAO,CAAC,2DAAe;AAC1C,gBAAgB,mBAAO,CAAC,mDAAW;AACnC,OAAO,oBAAoB,GAAG,mBAAO,CAAC,uDAAa;;AAEnD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,iBAAiB;AAC9B;AACA,aAAa,iBAAiB;AAC9B;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,aAAa,OAAO;AACpB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wCAAwC,IAAI;AAC5C;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,gDAAgD,IAAI,KAAK,MAAM;AAC/D;AACA;AACA;AACA,WAAW;AACX;AACA,8CAA8C,IAAI,KAAK,MAAM;AAC7D;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,8CAA8C,IAAI,KAAK,MAAM;AAC7D;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,8CAA8C,IAAI,KAAK,MAAM;AAC7D;AACA;AACA,SAAS;AACT,gDAAgD,IAAI;AACpD;;AAEA;AACA,OAAO;AACP,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gCAAgC,SAAS;AACzC;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,SAAS;AACzC;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9fa;;AAEb,OAAO,WAAW,GAAG,mBAAO,CAAC,sBAAQ;;AAErC,0BAA0B,mBAAO,CAAC,yEAAsB;AACxD;AACA;AACA;AACA;AACA;AACA,CAAC,GAAG,mBAAO,CAAC,uDAAa;AACzB,OAAO,gCAAgC,GAAG,mBAAO,CAAC,2DAAe;AACjE,OAAO,iCAAiC,GAAG,mBAAO,CAAC,yDAAc;;AAEjE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA,mDAAmD,aAAa;AAChE;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC,oBAAoB;AACxD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,iDAAiD,aAAa;AAC9D;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,uBAAuB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,SAAS;AACtB,cAAc,6BAA6B;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,kBAAkB;AAChC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,6BAA6B;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA,0DAA0D,KAAK;AAC/D;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB;AACA,WAAW,OAAO;AAClB,YAAY,mBAAmB;AAC/B;AACA;AACA;AACA;AACA,yCAAyC,QAAQ;AACjD;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;AC5ea;;AAEb,OAAO,iBAAiB,GAAG,mBAAO,CAAC,sBAAQ;;AAE3C,0BAA0B,mBAAO,CAAC,yEAAsB;AACxD,OAAO,eAAe,GAAG,mBAAO,CAAC,uDAAa;AAC9C,OAAO,oBAAoB,GAAG,mBAAO,CAAC,yDAAc;AACpD,OAAO,4BAA4B,GAAG,mBAAO,CAAC,2DAAe;;AAE7D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,OAAO;AACpB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,mBAAmB;AAChC,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,EAAE;AACf,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,EAAE;AACf,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,EAAE;AACf,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,EAAE;AACf,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,EAAE;AACf,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACvWa;;AAEb,OAAO,SAAS,GAAG,mBAAO,CAAC,sBAAQ;;AAEnC;AACA;AACA;AACA,WAAW,cAAc;AACzB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,OAAO;AAClB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACpJa;;AAEb;AACA,sBAAsB,mBAAO,CAAC,wIAAgB;;AAE9C;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7Ba;;AAEb,qBAAqB,mBAAO,CAAC,sBAAQ;AACrC,OAAO,aAAa,GAAG,mBAAO,CAAC,sBAAQ;AACvC,OAAO,6BAA6B,GAAG,mBAAO,CAAC,kBAAM;;AAErD,0BAA0B,mBAAO,CAAC,yEAAsB;AACxD,kBAAkB,mBAAO,CAAC,uDAAa;AACvC,OAAO,gBAAgB,GAAG,mBAAO,CAAC,uDAAa;AAC/C,OAAO,OAAO,GAAG,mBAAO,CAAC,uDAAa;;AAEtC,iCAAiC,GAAG;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA,aAAa,QAAQ;AACrB;AACA,aAAa,SAAS;AACtB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB,aAAa,OAAO;AACpB,aAAa,iBAAiB;AAC9B;AACA,aAAa,OAAO;AACpB,aAAa,YAAY;AACzB,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,qBAAqB;AACnC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,qBAAqB;AAClC,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,qBAAqB;AAClC,aAAa,WAAW;AACxB,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,kDAAkD;AAC3E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB,aAAa,qBAAqB;AAClC,aAAa,WAAW;AACxB,aAAa,OAAO;AACpB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA,gDAAgD,SAAS;AACzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,gDAAgD,MAAM;AACtD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,WAAW,aAAa;AACxB,WAAW,0BAA0B;AACrC,YAAY,SAAS;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,aAAa;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,WAAW;AACtB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,KAAK,GAAG,mBAAmB;AAC7C;AACA,yBAAyB,EAAE,IAAI,WAAW;AAC1C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACrZa;;AAEb,qBAAqB,mBAAO,CAAC,sBAAQ;AACrC,cAAc,mBAAO,CAAC,oBAAO;AAC7B,aAAa,mBAAO,CAAC,kBAAM;AAC3B,YAAY,mBAAO,CAAC,gBAAK;AACzB,YAAY,mBAAO,CAAC,gBAAK;AACzB,OAAO,0BAA0B,GAAG,mBAAO,CAAC,sBAAQ;AACpD,OAAO,MAAM,GAAG,mBAAO,CAAC,gBAAK;;AAE7B,0BAA0B,mBAAO,CAAC,yEAAsB;AACxD,iBAAiB,mBAAO,CAAC,qDAAY;AACrC,eAAe,mBAAO,CAAC,iDAAU;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,GAAG,mBAAO,CAAC,uDAAa;AACzB,OAAO,wCAAwC,GAAG,mBAAO,CAAC,6DAAgB;AAC1E,OAAO,gBAAgB,GAAG,mBAAO,CAAC,uDAAa;AAC/C,OAAO,WAAW,GAAG,mBAAO,CAAC,2DAAe;;AAE5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B,aAAa,kBAAkB;AAC/B,aAAa,OAAO;AACpB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,WAAW;AACxB,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,EAAE;AACf,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,EAAE;AACf,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,EAAE;AACf,aAAa,OAAO;AACpB,aAAa,QAAQ;AACrB;AACA,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,QAAQ;AACrB,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,kDAAkD,OAAO;AACzD;AACA;AACA;AACA,gBAAgB,qBAAqB;AACrC;AACA;AACA;AACA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe,SAAS;AACxB;AACA;AACA;AACA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;AAED;AACA;;AAEA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,iBAAiB;AAC5B,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,iBAAiB;AAC5B;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,qBAAqB;AAC5D,gCAAgC,4BAA4B;AAC5D;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;;AAEA;AACA,oCAAoC,cAAc;AAClD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mEAAmE;AACnE;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,mBAAmB,mBAAmB,GAAG,mBAAmB;AAC5D;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA,uCAAuC,eAAe;AACtD;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,cAAc;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,gCAAgC;AAC3C;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,EAAE;AACb,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2CAA2C,qBAAqB;AAChE,YAAY,kCAAkC;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,mBAAmB;AAC9B;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,qCAAqC;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC34BA,mC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,gC;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,gC;;;;;;;;;;;ACAA,gC;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,iC","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./src/commands\"));\n;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./src/connection-create\"));\n__export(require(\"./src/connection-settings\"));\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode = __importStar(require(\"vscode\"));\nconst utils_1 = require(\"../../utils\");\n/**\n * add new workspace folder by given connection settings\n */\nfunction ConnectionCreateCommand() {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const connectionService = utils_1.ConnectionService.getInstance();\n        const availableConnections = connectionService.getAll();\n        if (availableConnections.length === 0) {\n            return;\n        }\n        const items = availableConnections.map((connection) => ({\n            label: `${connection.host}:${connection.port}/${connection.path}`,\n            connection\n        }));\n        const selection = yield vscode.window.showQuickPick(items, { placeHolder: \"Select Connection\" });\n        if (selection) {\n            const name = `${selection.connection.host}:${selection.connection.port}`;\n            const uri = vscode.Uri.parse(`qix://${name}`);\n            const newWorkspaceFolder = { uri, name };\n            if (!vscode.workspace.getWorkspaceFolder(uri)) {\n                vscode.workspace.updateWorkspaceFolders(((_a = vscode.workspace.workspaceFolders) === null || _a === void 0 ? void 0 : _a.length) || 0, 0, newWorkspaceFolder);\n                /** after we have added a folder we need to be aware of it since we have to create a qlik connection */\n            }\n            else {\n                vscode.window.showInformationMessage(`Workspacefolder ${uri.toString()} allready exists.`);\n            }\n        }\n    });\n}\nexports.ConnectionCreateCommand = ConnectionCreateCommand;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst settings_1 = require(\"../../settings\");\nfunction ConnectionSettingsCommands() {\n    const view = new settings_1.ConnectionWebview();\n    view.render();\n}\nexports.ConnectionSettingsCommands = ConnectionSettingsCommands;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./src/connection.view\"));\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode = __importStar(require(\"vscode\"));\nconst path = __importStar(require(\"path\"));\nconst fs = __importStar(require(\"fs\"));\nconst utils_1 = require(\"../../utils\");\nvar ViewCommand;\n(function (ViewCommand) {\n    ViewCommand[\"ADD\"] = \"add\";\n    ViewCommand[\"DELETE\"] = \"delete\";\n})(ViewCommand = exports.ViewCommand || (exports.ViewCommand = {}));\nclass ConnectionWebview {\n    constructor() {\n        this.isDisposed = false;\n        this.connectionService = utils_1.ConnectionService.getInstance();\n    }\n    render() {\n        if (!this.view || this.isDisposed) {\n            this.view = vscode.window.createWebviewPanel(\"VSQlik.Connection.Create\", \"VSQlik Connection Create\", vscode.ViewColumn.One, { enableScripts: true });\n            const template = path.resolve(__dirname, './connection.html');\n            this.view.webview.html = fs.readFileSync(template, { encoding: \"utf8\" });\n            this.view.webview.onDidReceiveMessage((message) => this.handleMessage(message));\n            this.view.onDidDispose(() => this.isDisposed = true);\n            this.view.onDidChangeViewState((event) => {\n                if (event.webviewPanel.visible) {\n                    this.updateConnections();\n                }\n            });\n        }\n        this.updateConnections();\n        return this.view;\n    }\n    close() {\n        this.view.dispose();\n    }\n    send(message) {\n        this.view.webview.postMessage(message);\n    }\n    handleMessage(message) {\n        return __awaiter(this, void 0, void 0, function* () {\n            switch (message.command) {\n                case ViewCommand.ADD:\n                    this.addNewConnection(message.data);\n                    break;\n                case ViewCommand.DELETE:\n                    break;\n            }\n        });\n    }\n    addNewConnection(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.updateConnections();\n        });\n    }\n    deleteConnection(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.updateConnections();\n        });\n    }\n    updateConnections() {\n        const connections = this.connectionService.getAll();\n        this.view.webview.postMessage({ command: 'update', connections });\n    }\n}\nexports.ConnectionWebview = ConnectionWebview;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./src/connection.service\"));\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode_1 = require(\"vscode\");\nconst utils_1 = require(\"../../../../utils\");\nclass ConnectionService {\n    constructor() {\n        this.configuration = vscode_1.workspace.getConfiguration();\n        vscode_1.workspace.onDidChangeConfiguration(this.onConfigurationChanged, this);\n    }\n    static getInstance() {\n        if (!this.instance) {\n            this.instance = new ConnectionService();\n        }\n        return this.instance;\n    }\n    add(connection) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const settings = this.getAll();\n            const newSettings = [...settings, connection];\n            return this.configuration.update(utils_1.SessionCache.get(utils_1.ConnectionSettings), newSettings, vscode_1.ConfigurationTarget.Global);\n        });\n    }\n    delete(connection) {\n        return __awaiter(this, void 0, void 0, function* () {\n        });\n    }\n    update(connection, old) {\n        return __awaiter(this, void 0, void 0, function* () { });\n    }\n    getAll() {\n        console.log(utils_1.SessionCache.get(utils_1.ConnectionSettings));\n        return this.configuration.get(utils_1.SessionCache.get(utils_1.ConnectionSettings));\n    }\n    /**\n     * create new connection which can stored into storage\n     */\n    createConnection(uri) {\n    }\n    onConfigurationChanged(event) {\n        if (event.affectsConfiguration(utils_1.SessionCache.get(utils_1.ConnectionSettings))) {\n            this.configuration = vscode_1.workspace.getConfiguration();\n        }\n    }\n}\nexports.ConnectionService = ConnectionService;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./src/utils\"));\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./src/enigma-session\"));\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst enigma_js_1 = require(\"enigma.js\");\nconst sense_utilities_1 = require(\"enigma.js/sense-utilities\");\nconst _12_20_0_json_1 = __importDefault(require(\"enigma.js/schemas/12.20.0.json\"));\nconst ws_1 = __importDefault(require(\"ws\"));\n/**\n * Services to create, cache and handle enigma session\n *\n * ich müsste die gesammte klasse weg speichern\n * aber das ist auch nicht so übel sprach der dübel\n */\nclass EnigmaSession {\n    /**\n     * Creates an instance of EnigmaSession.\n     */\n    constructor(host, port, secure = true) {\n        this.host = host;\n        this.port = port;\n        this.secure = secure;\n        /**\n         * max sessions we could open by default this is 5\n         * set to value lte 0 for max sessions\n         */\n        this.maxSessionCount = 5;\n        this.activeStack = new Array();\n        this.connectionQueue = new Map();\n        this.sessionCache = new Map();\n    }\n    set maxSessions(max) {\n        this.maxSessionCount = max;\n    }\n    get maxSessions() {\n        return this.maxSessionCount;\n    }\n    open(appId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const id = appId || EnigmaSession.GLOBAL_SESSION_KEY;\n            let session;\n            /** create new session */\n            if (!this.isCached(id)) {\n                session = yield this.createSessionObject(id);\n            }\n            else {\n                session = yield this.activateSession(id);\n            }\n            return \"global\" in session ? session : session;\n        });\n    }\n    close(appId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = appId || EnigmaSession.GLOBAL_SESSION_KEY;\n            if (this.isCached(key)) {\n                yield this.loadFromCache(key).session.close();\n            }\n        });\n    }\n    isApp(appid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const global = yield this.open();\n            try {\n                const doc = yield global.openDoc(appid);\n                doc.session.close();\n                return true;\n            }\n            catch (error) {\n                return false;\n            }\n        });\n    }\n    /**\n     * activate session if not allready in active stack\n     */\n    activateSession(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const connection = this.loadFromCache(id);\n            if (connection && !this.isActive(id)) {\n                yield this.suspendOldestSession();\n                yield connection.session.resume();\n                this.activeStack.push(id);\n            }\n            return connection;\n        });\n    }\n    /**\n     * create new session object, buffer current connections into map\n     * so if same connection wants to open twice take existing Promise\n     * and return this one.\n     *\n     * @todo refactor this one\n     */\n    createSessionObject(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.connectionQueue.has(id)) {\n                this.connectionQueue.set(id, new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                    yield this.suspendOldestSession();\n                    const url = this.buildUri(id);\n                    let sessionObj;\n                    const session = enigma_js_1.create({ schema: _12_20_0_json_1.default, url, createSocket: (url) => new ws_1.default(url) });\n                    sessionObj = yield session.open();\n                    sessionObj.on(\"closed\", () => this.removeSessionFromCache(id));\n                    if (id !== EnigmaSession.GLOBAL_SESSION_KEY) {\n                        try {\n                            sessionObj = yield sessionObj.openDoc(id);\n                        }\n                        catch (error) {\n                            yield sessionObj.session.close();\n                            reject();\n                            return;\n                        }\n                    }\n                    this.sessionCache.set(id, sessionObj);\n                    this.activeStack.push(id);\n                    this.connectionQueue.delete(id);\n                    resolve(sessionObj);\n                })));\n            }\n            return this.connectionQueue.get(id);\n        });\n    }\n    removeSessionFromCache(id) {\n        this.isCached(id) ? this.sessionCache.delete(id) : void 0;\n        this.isActive(id) ? this.activeStack.splice(this.activeStack.indexOf(id), 1) : void 0;\n    }\n    /**\n     * returns true if session is allready active\n     */\n    isActive(id) {\n        return this.activeStack.indexOf(id) > -1;\n    }\n    /**\n     * returns true if session is allready cached\n     */\n    isCached(id) {\n        return this.sessionCache.has(id);\n    }\n    /**\n     * load session object from cache\n     */\n    loadFromCache(id = EnigmaSession.GLOBAL_SESSION_KEY) {\n        let session = this.sessionCache.get(id);\n        if (session) {\n            return session;\n        }\n        throw \"Session not found\";\n    }\n    /**\n     * suspend oldest session\n     */\n    suspendOldestSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.maxSessions <= 0 || this.activeStack.length < this.maxSessions) {\n                return;\n            }\n            const oldestSessionId = this.activeStack.shift();\n            const connection = this.loadFromCache(oldestSessionId);\n            if (connection) {\n                yield connection.session.suspend();\n            }\n        });\n    }\n    /**\n     * generate new url for websocket call to enigma\n     */\n    buildUri(id = EnigmaSession.GLOBAL_SESSION_KEY) {\n        return sense_utilities_1.buildUrl({\n            appId: id,\n            host: this.host,\n            identity: Math.random().toString(32).substr(2),\n            port: this.port,\n            secure: this.secure,\n        });\n    }\n}\nexports.EnigmaSession = EnigmaSession;\nEnigmaSession.GLOBAL_SESSION_KEY = \"engineData\";\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"./enigma\");\nconst vscode = __importStar(require(\"vscode\"));\nconst connection_1 = require(\"./connection\");\nconst utils_1 = require(\"@qixfs/utils\");\nconst utils_2 = require(\"@extension/utils\");\nconst _qixfs_entry_1 = require(\"@qixfs-entry\");\n/**\n * @todo check for guard since this could be [SOMETHING]/scripts and this is wrong\n * since SOMETHING not is an app\n */\nexports.routes = [{\n        path: \"\",\n        ctrl: _qixfs_entry_1.DocumentsDirectory,\n    }, {\n        path: \":app\",\n        ctrl: _qixfs_entry_1.AppDirectory,\n    }, {\n        path: \":app/scripts\",\n        ctrl: _qixfs_entry_1.AppScriptDirectory,\n    }, {\n        path: \":app/scripts/main.qvs\",\n        ctrl: _qixfs_entry_1.QlikScriptFile\n    }];\n/**\n * bootstrap extension\n */\nfunction activate(context) {\n    return __awaiter(this, void 0, void 0, function* () {\n        utils_1.WorkspaceFolderManager.addFolder(vscode.workspace.workspaceFolders || []);\n        utils_1.QixRouter.addRoutes(exports.routes);\n        utils_2.SessionCache.add(utils_2.ExtensionContext, context);\n        utils_2.SessionCache.add(utils_2.ConnectionSettings, `VSQlik.Connection`);\n        /** register connection commands */\n        vscode.commands.registerCommand(\"VSQlik.Connection.Create\" /* CREATE */, connection_1.ConnectionCreateCommand);\n        vscode.commands.registerCommand(\"VSQlik.Connection.Settings\" /* SETTINGS */, connection_1.ConnectionSettingsCommands);\n        /** register fs */\n        const qixFs = new utils_1.QixFSProvider();\n        context.subscriptions.push(vscode.workspace.registerFileSystemProvider('qix', qixFs, { isCaseSensitive: true }));\n    });\n}\nexports.activate = activate;\nfunction deactivate() {\n}\nexports.deactivate = deactivate;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./src/directory/app\"));\n__export(require(\"./src/directory/app-script\"));\n__export(require(\"./src/directory/documents\"));\n__export(require(\"./src/file/qlik-script\"));\n__export(require(\"./src/entry\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst entry_1 = require(\"../entry\");\nclass AppScriptDirectory extends entry_1.QixFsDirectory {\n    readDirectory(uri, params) {\n        throw new Error(\"Method not implemented.\");\n    }\n    createDirectory(uri, name, params) {\n        throw new Error(\"Method not implemented.\");\n    }\n    stat(uri, params) {\n        throw new Error(\"Method not implemented.\");\n    }\n    delete(uri, params, options) {\n        throw new Error(\"Method not implemented.\");\n    }\n    rename(uri, oldUri, newUri, options) {\n        throw new Error(\"Method not implemented.\");\n    }\n}\nexports.AppScriptDirectory = AppScriptDirectory;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst entry_1 = require(\"../entry\");\nconst vscode = __importStar(require(\"vscode\"));\nclass AppDirectory extends entry_1.QixFsDirectory {\n    readDirectory(uri, params) {\n        throw new Error(\"Method not implemented.\");\n    }\n    createDirectory(uri, name, params) {\n        throw new Error(\"Method not implemented.\");\n    }\n    stat(uri, params) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (((_a = params) === null || _a === void 0 ? void 0 : _a.app) && (yield this.getConnection(uri).isApp(params.app))) {\n                return {\n                    ctime: Date.now(),\n                    mtime: Date.now(),\n                    size: 10,\n                    type: vscode.FileType.Directory\n                };\n            }\n            throw vscode.FileSystemError.FileNotFound();\n        });\n    }\n    delete(uri, params, options) {\n        throw new Error(\"Method not implemented.\");\n    }\n    rename(uri, oldUri, newUri, options) {\n        throw new Error(\"Method not implemented.\");\n    }\n}\nexports.AppDirectory = AppDirectory;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode = __importStar(require(\"vscode\"));\nconst entry_1 = require(\"../entry\");\nclass DocumentsDirectory extends entry_1.QixFsDirectory {\n    /**\n     * read all qlik documents (apps) from enigma session\n     */\n    readDirectory(uri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const session = yield this.getConnection(uri).open();\n                const docList = yield session.getDocList();\n                return docList.map((doc) => [doc.qTitle, vscode.FileType.Directory]);\n            }\n            catch (error) {\n                return [];\n            }\n        });\n    }\n    /**\n     * create new app\n     */\n    createDirectory(uri, name, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const session = yield this.getConnection(uri).open();\n            yield session.createApp(name);\n        });\n    }\n    delete(connection, params, options) {\n        throw new Error(\"Method not implemented.\");\n    }\n    stat(connection) {\n        return {\n            ctime: Date.now(),\n            mtime: Date.now(),\n            size: 10,\n            type: vscode.FileType.Directory\n        };\n    }\n    rename(connection, oldUri, newUri, options) {\n        throw new Error(\"Method not implemented.\");\n    }\n}\nexports.DocumentsDirectory = DocumentsDirectory;\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode = __importStar(require(\"vscode\"));\nconst utils_1 = require(\"@qixfs/utils\");\n/**\n * der würde nun mehrfach existieren\n * aber quasi als singleton\n *\n * er sucht sich immer die passende connection raus und leitet diese\n * an die eigentliche methode weiter\n */\nclass QixFsEntry {\n    getConnection(uri) {\n        const workspaceFolder = utils_1.WorkspaceFolderManager.resolveWorkspaceFolder(uri);\n        if (workspaceFolder) {\n            return workspaceFolder.connection;\n        }\n        throw new Error(\"not found\");\n    }\n}\nexports.QixFsEntry = QixFsEntry;\n/**\n * QixFs File Entry\n */\nclass QixFsFile extends QixFsEntry {\n    constructor() {\n        super(...arguments);\n        this.type = vscode.FileType.File;\n    }\n}\nexports.QixFsFile = QixFsFile;\n/**\n * QixFs Directory Entry\n */\nclass QixFsDirectory extends QixFsEntry {\n    constructor() {\n        super(...arguments);\n        this.type = vscode.FileType.Directory;\n    }\n}\nexports.QixFsDirectory = QixFsDirectory;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst entry_1 = require(\"../entry\");\nclass QlikScriptFile extends entry_1.QixFsFile {\n    readFile(uri, params) {\n        throw new Error(\"Method not implemented.\");\n    }\n    writeFile(uri, content, params) {\n        throw new Error(\"Method not implemented.\");\n    }\n    stat(uri, params) {\n        throw new Error(\"Method not implemented.\");\n    }\n    delete(uri, params, options) {\n        throw new Error(\"Method not implemented.\");\n    }\n    rename(connection, oldUri, newUri, options) {\n        throw new Error(\"Method not implemented.\");\n    }\n}\nexports.QlikScriptFile = QlikScriptFile;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./src/workspace-folder\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst enigma_1 = require(\"@extension/enigma\");\n/**\n * davon reicht eine die dann geshared wird\n * müssen ja auch die route dahin kennen und hier wirds komplizierter\n */\n/**\n * davon gibt es viele\n */\nclass QixWorkspaceFolder {\n    constructor(connection) {\n        /** file system entry points */\n        this.entryMap = new Map();\n        this._connection = new enigma_1.EnigmaSession(connection.host, connection.port, connection.secure);\n    }\n    get connection() {\n        return this._connection;\n    }\n    destroy() {\n    }\n}\nexports.QixWorkspaceFolder = QixWorkspaceFolder;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./src/qix-fs.provider\"));\n__export(require(\"./src/workspace-folder-manager\"));\n__export(require(\"./src/router\"));\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst vscode = __importStar(require(\"vscode\"));\nconst router_1 = require(\"./router\");\nconst path_1 = require(\"path\");\n// der brauch ne Map -> URI -> Connection\n/** should use enum for this ? */\nvar QixFsCommands;\n(function (QixFsCommands) {\n    QixFsCommands.DELETE_FILE_COMMAND = `vscodeQlik.qixfs.deleteFileCommand`;\n})(QixFsCommands = exports.QixFsCommands || (exports.QixFsCommands = {}));\n/**\n * Qix File System\n *\n * soll das immer mit enigma arbeiten ?\n */\nclass QixFSProvider {\n    /**\n     * construct new Qix file system\n     */\n    constructor() {\n        this.emitter = new vscode.EventEmitter();\n        this.onDidChangeFile = this.emitter.event;\n    }\n    watch(_resource) {\n        return new vscode.Disposable(() => { });\n    }\n    /**\n     * return file or directory stats\n     */\n    stat(uri) {\n        var _a;\n        /** find entry */\n        const route = router_1.QixRouter.find(uri);\n        if ((_a = route) === null || _a === void 0 ? void 0 : _a.entry) {\n            /** get current enigma session ? */\n            return route.entry.stat(uri, route.params);\n        }\n        throw vscode.FileSystemError.FileNotFound();\n    }\n    /**\n     */\n    readDirectory(uri) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const route = router_1.QixRouter.find(uri);\n            if (((_a = route) === null || _a === void 0 ? void 0 : _a.entry.type) === vscode.FileType.Directory) {\n                return route.entry.readDirectory(uri, route.params);\n            }\n            throw vscode.FileSystemError.FileNotFound();\n        });\n    }\n    /**\n     */\n    createDirectory(uri, silent = false) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const parentUri = uri.with({ path: path_1.posix.dirname(uri.path) });\n            const name = path_1.posix.basename(uri.path);\n            const route = router_1.QixRouter.find(parentUri);\n            if (((_a = route) === null || _a === void 0 ? void 0 : _a.entry.type) === vscode.FileType.Directory) {\n                return yield route.entry.createDirectory(uri, name, route.params);\n            }\n            throw vscode.FileSystemError.FileNotADirectory();\n        });\n    }\n    readFile(uri) {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw vscode.FileSystemError.FileNotFound();\n        });\n    }\n    writeFile(uri, content, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n        });\n    }\n    delete(uri) {\n        return __awaiter(this, void 0, void 0, function* () {\n        });\n    }\n    rename(oldUri, newUri, options) {\n    }\n}\nexports.QixFSProvider = QixFSProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n;\n;\n/**\n * factory to create a concrete adapter\n * like a qlik script file adapter or documents directory adapter\n *\n * works as flyweight, routes allways return allways same instance from a adapter\n */\nclass QixRouter {\n    /**\n     * find endpoint by given uri\n     */\n    static find(uri) {\n        if (uri.scheme !== \"qix\") {\n            return;\n        }\n        const routes = this.routes.values();\n        let route;\n        let matches = null;\n        /** loop all routes until all routes are used or we have a matched route */\n        while ((route = routes.next().value) && !(matches = uri.path.match(route.matcher)))\n            ;\n        if (route) {\n            /** merge param name and value together into one object */\n            const params = route.params.reduce((params, routeParam, index) => { var _a; return (params[routeParam] = ((_a = matches) === null || _a === void 0 ? void 0 : _a[index + 1]) || \"\", params); }, {});\n            return {\n                entry: route.control.getControl(),\n                params\n            };\n        }\n    }\n    /**\n     * add new route\n     */\n    static addRoutes(routes) {\n        routes.forEach((route) => this.registerRoute(route));\n    }\n    /**\n     * register route to router\n     *\n     * @todo check correct behavior route allready registered (maybe show warning)\n     */\n    static registerRoute(route) {\n        if (!this.controls.has(route.ctrl)) {\n            this.controls.set(route.ctrl, this.createControllerFactory(route.ctrl));\n        }\n        const parsed = this.parseRoute(route.path);\n        const control = this.controls.get(route.ctrl);\n        /** save route */\n        this.routes.set(route.path, Object.assign(Object.assign({}, parsed), { control }));\n    }\n    /**\n     * parse route data\n     */\n    static parseRoute(route) {\n        let params = route.match(/:([^\\/]+)/g) || [];\n        let matcher = new RegExp('^/' + route.replace(/:([^\\/]+)/g, \"([^/]+)\") + '$');\n        return {\n            matcher,\n            params: params.map((segment) => segment.substr(1)),\n            route: route\n        };\n    }\n    /**\n     * controller factory for lazy initialization,\n     * also ensures one adapter exists only 1 time.\n     */\n    static createControllerFactory(ctrl) {\n        let instance;\n        return {\n            getControl: () => {\n                if (!instance) {\n                    instance = new ctrl();\n                }\n                return instance;\n            }\n        };\n    }\n}\nexports.QixRouter = QixRouter;\nQixRouter.routes = new Map();\nQixRouter.controls = new WeakMap();\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst model_1 = require(\"@qixfs/model\");\nconst vscode = __importStar(require(\"vscode\"));\n/**\n * holds all active workspace folders\n * which represented qlik servers\n */\nclass WorkspaceFolderManager {\n    constructor() {\n        throw new Error(\"could not create new instance use getInstance instead\");\n    }\n    static addFolder(folders) {\n        folders\n            .filter((folder) => folder.uri.scheme === 'qix')\n            .forEach((_) => this.addWorkspaceFolder(_));\n    }\n    static removeFolder(folders) {\n        folders\n            .filter((folder) => folder.uri.scheme === 'qix')\n            .forEach(folder => this.closeWorkspaceFolder(folder));\n    }\n    /**\n     * find our workspace folder by uri, default we could have multiple\n     * workspace folders and each have an own enigma connection but qixfs provider\n     * dosent know this.\n     *\n     * so we need to find correct workspace folder and get the correct enigma session context.\n     */\n    static resolveWorkspaceFolder(uri) {\n        const wsFolder = vscode.workspace.getWorkspaceFolder(uri);\n        if (wsFolder && wsFolder.uri.scheme === 'qix') {\n            return this.workspaceFolders.get(wsFolder);\n        }\n        throw new Error(\"Workspace Folder not found\");\n    }\n    static find(uri) {\n        return void 0;\n    }\n    /**\n     * register new qix workspace folder\n     *\n     * @param folder\n     */\n    static addWorkspaceFolder(folder) {\n        const configuration = vscode.workspace.getConfiguration();\n        const connections = configuration.get(`VSQlik.Connection`);\n        const config = connections.find(config => folder.name === `${config.host}:${config.port}`);\n        const qixWSFolder = new model_1.QixWorkspaceFolder(config);\n        this.workspaceFolders.set(folder, qixWSFolder);\n    }\n    /**\n     * closes a qix workspace folder\n     */\n    static closeWorkspaceFolder(folder) {\n        var _a;\n        const qixWorkspaceFolder = this.workspaceFolders.get(folder);\n        (_a = qixWorkspaceFolder) === null || _a === void 0 ? void 0 : _a.destroy();\n        this.workspaceFolders.delete(folder);\n    }\n    /**\n     * handle event if workspace folders has been changed (added or removed)\n     */\n    static workspaceFolderChanged(event) {\n        if (event.added.length) {\n            this.addFolder(event.added);\n        }\n        if (event.removed.length) {\n            this.removeFolder(event.removed);\n        }\n    }\n}\nexports.WorkspaceFolderManager = WorkspaceFolderManager;\nWorkspaceFolderManager.workspaceFolders = new WeakMap();\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./src/session-cache\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass SessionToken {\n    constructor(description = '') {\n        this.description = description;\n    }\n}\nexports.SessionToken = SessionToken;\nexports.ExtensionContext = new SessionToken(\"VSCode Extension Context\");\nexports.ConnectionSettings = new SessionToken(\"VSCode Connection Settings\");\nexports.WorkspaceFolders = new SessionToken(\"VSCode Connection Settings\");\nclass SessionCache {\n    static add(token, value) {\n        SessionCache.values.set(token, value);\n    }\n    static get(token) {\n        return SessionCache.values.get(token);\n    }\n}\nexports.SessionCache = SessionCache;\nSessionCache.values = new WeakMap();\n","/**\n * enigma.js v2.6.3\n * Copyright (c) 2019 QlikTech International AB\n * This library is licensed under MIT - See the LICENSE file for full details\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.enigma = factory());\n}(this, (function () { 'use strict';\n\n  /**\n   * Utility functions\n   */\n\n  var util = {};\n\n  util.isObject = function isObject(arg) {\n    return typeof arg === 'object' && arg !== null;\n  };\n\n  util.isNumber = function isNumber(arg) {\n    return typeof arg === 'number';\n  };\n\n  util.isUndefined = function isUndefined(arg) {\n    return arg === void 0;\n  };\n\n  util.isFunction = function isFunction(arg){\n    return typeof arg === 'function';\n  };\n\n\n  /**\n   * EventEmitter class\n   */\n\n  function EventEmitter() {\n    EventEmitter.init.call(this);\n  }\n  var nodeEventEmitter = EventEmitter;\n\n  // Backwards-compat with node 0.10.x\n  EventEmitter.EventEmitter = EventEmitter;\n\n  EventEmitter.prototype._events = undefined;\n  EventEmitter.prototype._maxListeners = undefined;\n\n  // By default EventEmitters will print a warning if more than 10 listeners are\n  // added to it. This is a useful default which helps finding memory leaks.\n  EventEmitter.defaultMaxListeners = 10;\n\n  EventEmitter.init = function() {\n    this._events = this._events || {};\n    this._maxListeners = this._maxListeners || undefined;\n  };\n\n  // Obviously not all Emitters should be limited to 10. This function allows\n  // that to be increased. Set to zero for unlimited.\n  EventEmitter.prototype.setMaxListeners = function(n) {\n    if (!util.isNumber(n) || n < 0 || isNaN(n))\n      throw TypeError('n must be a positive number');\n    this._maxListeners = n;\n    return this;\n  };\n\n  EventEmitter.prototype.emit = function(type) {\n    var er, handler, len, args, i, listeners;\n\n    if (!this._events)\n      this._events = {};\n\n    // If there is no 'error' event listener then throw.\n    if (type === 'error' && !this._events.error) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        throw Error('Uncaught, unspecified \"error\" event.');\n      }\n    }\n\n    handler = this._events[type];\n\n    if (util.isUndefined(handler))\n      return false;\n\n    if (util.isFunction(handler)) {\n      switch (arguments.length) {\n        // fast cases\n        case 1:\n          handler.call(this);\n          break;\n        case 2:\n          handler.call(this, arguments[1]);\n          break;\n        case 3:\n          handler.call(this, arguments[1], arguments[2]);\n          break;\n        // slower\n        default:\n          len = arguments.length;\n          args = new Array(len - 1);\n          for (i = 1; i < len; i++)\n            args[i - 1] = arguments[i];\n          handler.apply(this, args);\n      }\n    } else if (util.isObject(handler)) {\n      len = arguments.length;\n      args = new Array(len - 1);\n      for (i = 1; i < len; i++)\n        args[i - 1] = arguments[i];\n\n      listeners = handler.slice();\n      len = listeners.length;\n      for (i = 0; i < len; i++)\n        listeners[i].apply(this, args);\n    }\n\n    return true;\n  };\n\n  EventEmitter.prototype.addListener = function(type, listener) {\n    var m;\n\n    if (!util.isFunction(listener))\n      throw TypeError('listener must be a function');\n\n    if (!this._events)\n      this._events = {};\n\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (this._events.newListener)\n      this.emit('newListener', type,\n                util.isFunction(listener.listener) ?\n                listener.listener : listener);\n\n    if (!this._events[type])\n      // Optimize the case of one listener. Don't need the extra array object.\n      this._events[type] = listener;\n    else if (util.isObject(this._events[type]))\n      // If we've already got an array, just append.\n      this._events[type].push(listener);\n    else\n      // Adding the second element, need to change to array.\n      this._events[type] = [this._events[type], listener];\n\n    // Check for listener leak\n    if (util.isObject(this._events[type]) && !this._events[type].warned) {\n      var m;\n      if (!util.isUndefined(this._maxListeners)) {\n        m = this._maxListeners;\n      } else {\n        m = EventEmitter.defaultMaxListeners;\n      }\n\n      if (m && m > 0 && this._events[type].length > m) {\n        this._events[type].warned = true;\n\n        if (util.isFunction(console.error)) {\n          console.error('(node) warning: possible EventEmitter memory ' +\n                        'leak detected. %d listeners added. ' +\n                        'Use emitter.setMaxListeners() to increase limit.',\n                        this._events[type].length);\n        }\n        if (util.isFunction(console.trace))\n          console.trace();\n      }\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\n  EventEmitter.prototype.once = function(type, listener) {\n    if (!util.isFunction(listener))\n      throw TypeError('listener must be a function');\n\n    var fired = false;\n\n    function g() {\n      this.removeListener(type, g);\n\n      if (!fired) {\n        fired = true;\n        listener.apply(this, arguments);\n      }\n    }\n\n    g.listener = listener;\n    this.on(type, g);\n\n    return this;\n  };\n\n  // emits a 'removeListener' event iff the listener was removed\n  EventEmitter.prototype.removeListener = function(type, listener) {\n    var list, position, length, i;\n\n    if (!util.isFunction(listener))\n      throw TypeError('listener must be a function');\n\n    if (!this._events || !this._events[type])\n      return this;\n\n    list = this._events[type];\n    length = list.length;\n    position = -1;\n\n    if (list === listener ||\n        (util.isFunction(list.listener) && list.listener === listener)) {\n      delete this._events[type];\n      if (this._events.removeListener)\n        this.emit('removeListener', type, listener);\n\n    } else if (util.isObject(list)) {\n      for (i = length; i-- > 0;) {\n        if (list[i] === listener ||\n            (list[i].listener && list[i].listener === listener)) {\n          position = i;\n          break;\n        }\n      }\n\n      if (position < 0)\n        return this;\n\n      if (list.length === 1) {\n        list.length = 0;\n        delete this._events[type];\n      } else {\n        list.splice(position, 1);\n      }\n\n      if (this._events.removeListener)\n        this.emit('removeListener', type, listener);\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype.removeAllListeners = function(type) {\n    var key, listeners;\n\n    if (!this._events)\n      return this;\n\n    // not listening for removeListener, no need to emit\n    if (!this._events.removeListener) {\n      if (arguments.length === 0)\n        this._events = {};\n      else if (this._events[type])\n        delete this._events[type];\n      return this;\n    }\n\n    // emit removeListener for all listeners on all events\n    if (arguments.length === 0) {\n      for (key in this._events) {\n        if (key === 'removeListener') continue;\n        this.removeAllListeners(key);\n      }\n      this.removeAllListeners('removeListener');\n      this._events = {};\n      return this;\n    }\n\n    listeners = this._events[type];\n\n    if (util.isFunction(listeners)) {\n      this.removeListener(type, listeners);\n    } else if (Array.isArray(listeners)) {\n      // LIFO order\n      while (listeners.length)\n        this.removeListener(type, listeners[listeners.length - 1]);\n    }\n    delete this._events[type];\n\n    return this;\n  };\n\n  EventEmitter.prototype.listeners = function(type) {\n    var ret;\n    if (!this._events || !this._events[type])\n      ret = [];\n    else if (util.isFunction(this._events[type]))\n      ret = [this._events[type]];\n    else\n      ret = this._events[type].slice();\n    return ret;\n  };\n\n  EventEmitter.listenerCount = function(emitter, type) {\n    var ret;\n    if (!emitter._events || !emitter._events[type])\n      ret = 0;\n    else if (util.isFunction(emitter._events[type]))\n      ret = 1;\n    else\n      ret = emitter._events[type].length;\n    return ret;\n  };\n\n  /**\n  * @module EventEmitter\n  * @private\n  */\n\n  var Events = {\n    /**\n    * Function used to add event handling to objects passed in.\n    * @param {Object} obj Object instance that will get event handling.\n    */\n    mixin: function mixin(obj) {\n      Object.keys(nodeEventEmitter.prototype).forEach(function (key) {\n        obj[key] = nodeEventEmitter.prototype[key];\n      });\n      nodeEventEmitter.init(obj);\n    }\n  };\n\n  function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\n  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\n  function _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\n  function isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n  function _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\n  function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\n  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n  /**\n   * Error containing a custom error code.\n   * @extends Error\n   * @property {number} code The error code as defined by `errorCodes`\n   * @property {boolean} enigmaError=true\n   */\n  var EnigmaError =\n  /*#__PURE__*/\n  function (_Error) {\n    _inherits(EnigmaError, _Error);\n\n    function EnigmaError(name, code) {\n      var _this;\n\n      _classCallCheck(this, EnigmaError);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(EnigmaError).call(this, name));\n      _this.code = code;\n      _this.enigmaError = true;\n      return _this;\n    }\n\n    return EnigmaError;\n  }(_wrapNativeSuper(Error));\n  /**\n   * Create an enigmaError\n   * @param {Number} code A proper error code from `errorCodes`\n   * @param {String} name A message/name of the enigmaError.\n   * @returns {EnigmaError}\n   */\n\n\n  function createEnigmaError(code, name) {\n    return new EnigmaError(name, code);\n  }\n\n  /**\n   * @enum\n   */\n  var errorCodes = {\n    /**\n     * You're trying to send data on a socket that's not created\n     * @type {number}\n     */\n    NOT_CONNECTED: -1,\n\n    /**\n     * The object you're trying to fetch does not exist\n     * @type {number}\n     */\n    OBJECT_NOT_FOUND: -2,\n\n    /**\n     * Unexpected RPC response, expected array of patches\n     * @type {number}\n     */\n    EXPECTED_ARRAY_OF_PATCHES: -3,\n\n    /**\n     * Patchee is not an object we can patch\n     * @type {number}\n     */\n    PATCH_HAS_NO_PARENT: -4,\n\n    /**\n     * This entry is already defined with another key\n     * @type {number}\n     */\n    ENTRY_ALREADY_DEFINED: -5,\n\n    /**\n     * You need to supply a configuration\n     * @type {number}\n     */\n    NO_CONFIG_SUPPLIED: -6,\n\n    /**\n     * There's no promise object available (polyfill required?)\n     * @type {number}\n     */\n    PROMISE_REQUIRED: -7,\n\n    /**\n     * The schema struct type you requested does not exist\n     * @type {number}\n     */\n    SCHEMA_STRUCT_TYPE_NOT_FOUND: -8,\n\n    /**\n     * Can't override this function\n     * @type {number}\n     */\n    SCHEMA_MIXIN_CANT_OVERRIDE_FUNCTION: -9,\n\n    /**\n     * Extend is not allowed for this mixin\n     * @type {number}\n     */\n    SCHEMA_MIXIN_EXTEND_NOT_ALLOWED: -10,\n\n    /**\n     * Session suspended - no interaction allowed\n     * @type {number}\n     */\n    SESSION_SUSPENDED: -11,\n\n    /**\n     * onlyIfAttached supplied, but you got SESSION_CREATED\n     * @type {number}\n     */\n    SESSION_NOT_ATTACHED: -12\n  };\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n  function _classCallCheck$1(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n  var RPC_CLOSE_NORMAL = 1000;\n  var RPC_CLOSE_MANUAL_SUSPEND = 4000;\n  var cacheId = 0;\n  /**\n   * The QIX Engine session object\n   */\n\n  var Session =\n  /*#__PURE__*/\n  function () {\n    /**\n     * Handle all JSON-RPC notification event, 'notification:*. Or handle a specific JSON-RPC\n     * notification event, 'notification:OnConnected'. These events depend on the product you use QIX\n     * Engine from.\n     * @event Session#notification\n     * @type {Object}\n     */\n\n    /**\n    * Handle websocket messages. Generally used in debugging purposes. traffic:* will handle all\n    * websocket messages, traffic:sent will handle outgoing messages and traffic:received will handle\n    * incoming messages.\n    * @event Session#traffic\n    * @type {Object}\n    */\n    function Session(options) {\n      _classCallCheck$1(this, Session);\n\n      var session = this;\n      Object.assign(session, options);\n      this.Promise = this.config.Promise;\n      this.definition = this.config.definition;\n      Events.mixin(session);\n      cacheId += 1;\n      session.id = cacheId;\n      session.rpc.on('socket-error', session.onRpcError.bind(session));\n      session.rpc.on('closed', session.onRpcClosed.bind(session));\n      session.rpc.on('message', session.onRpcMessage.bind(session));\n      session.rpc.on('notification', session.onRpcNotification.bind(session));\n      session.rpc.on('traffic', session.onRpcTraffic.bind(session));\n      session.on('closed', function () {\n        return session.onSessionClosed();\n      });\n    }\n    /**\n    * Event handler for re-triggering error events from RPC.\n    * @private\n    * @emits socket-error\n    * @param {Error} err Webocket error event.\n    */\n\n\n    _createClass(Session, [{\n      key: \"onRpcError\",\n      value: function onRpcError(err) {\n        if (this.suspendResume.isSuspended) {\n          return;\n        }\n\n        this.emit('socket-error', err);\n      }\n      /**\n      * Event handler for the RPC close event.\n      * @private\n      * @emits Session#suspended\n      * @emits Session#closed\n      * @param {Event} evt WebSocket close event.\n      */\n\n    }, {\n      key: \"onRpcClosed\",\n      value: function onRpcClosed(evt) {\n        var _this = this;\n\n        /**\n         * Handle suspended state. This event is triggered in two cases (listed below). It is useful\n         * in scenarios where you for example want to block interaction in your application until you\n         * are resumed again. If config.suspendOnClose is true and there was a network disconnect\n         * (socked closed) or if you ran session.suspend().\n         * @event Session#suspended\n         * @type {Object}\n         * @param {Object} evt Event object.\n         * @param {String} evt.initiator String indication what triggered the suspended state. Possible\n         * values network, manual.\n         */\n        if (this.suspendResume.isSuspended) {\n          return;\n        }\n\n        if (evt.code === RPC_CLOSE_NORMAL || evt.code === RPC_CLOSE_MANUAL_SUSPEND) {\n          return;\n        }\n\n        if (this.config.suspendOnClose) {\n          var code = evt.code,\n              reason = evt.reason;\n          this.suspendResume.suspend().then(function () {\n            return _this.emit('suspended', {\n              initiator: 'network',\n              code: code,\n              reason: reason\n            });\n          });\n        } else {\n          this.emit('closed', evt);\n        }\n      }\n      /**\n      * Event handler for the RPC message event.\n      * @private\n      * @param {Object} response JSONRPC response.\n      */\n\n    }, {\n      key: \"onRpcMessage\",\n      value: function onRpcMessage(response) {\n        var _this2 = this;\n\n        if (this.suspendResume.isSuspended) {\n          return;\n        }\n\n        if (response.change) {\n          response.change.forEach(function (handle) {\n            return _this2.emitHandleChanged(handle);\n          });\n        }\n\n        if (response.close) {\n          response.close.forEach(function (handle) {\n            return _this2.emitHandleClosed(handle);\n          });\n        }\n      }\n      /**\n      * Event handler for the RPC notification event.\n      * @private\n      * @emits Session#notification\n      * @param {Object} response The JSONRPC notification.\n      */\n\n    }, {\n      key: \"onRpcNotification\",\n      value: function onRpcNotification(response) {\n        this.emit('notification:*', response.method, response.params);\n        this.emit(\"notification:\".concat(response.method), response.params);\n      }\n      /**\n      * Event handler for the RPC traffic event.\n      * @private\n      * @emits Session#traffic\n      * @param {String} dir The traffic direction, sent or received.\n      * @param {Object} data JSONRPC request/response/WebSocket message.\n      * @param {Number} handle The associated handle.\n      */\n\n    }, {\n      key: \"onRpcTraffic\",\n      value: function onRpcTraffic(dir, data, handle) {\n        this.emit('traffic:*', dir, data);\n        this.emit(\"traffic:\".concat(dir), data);\n        var api = this.apis.getApi(handle);\n\n        if (api) {\n          api.emit('traffic:*', dir, data);\n          api.emit(\"traffic:\".concat(dir), data);\n        }\n      }\n      /**\n      * Event handler for cleaning up API instances when a session has been closed.\n      * @private\n      * @emits API#closed\n      */\n\n    }, {\n      key: \"onSessionClosed\",\n      value: function onSessionClosed() {\n        this.apis.getApis().forEach(function (entry) {\n          entry.api.emit('closed');\n          entry.api.removeAllListeners();\n        });\n        this.apis.clear();\n      }\n      /**\n       * Function used to get an API for a backend object.\n       * @private\n       * @param {Object} args Arguments used to create object API.\n       * @param {Number} args.handle Handle of the backend object.\n       * @param {String} args.id ID of the backend object.\n       * @param {String} args.type QIX type of the backend object. Can for example\n       *                           be \"Doc\" or \"GenericVariable\".\n       * @param {String} args.genericType Custom type of the backend object, if defined in qInfo.\n       * @returns {*} Returns the generated and possibly augmented API.\n       */\n\n    }, {\n      key: \"getObjectApi\",\n      value: function getObjectApi(args) {\n        var handle = args.handle,\n            id = args.id,\n            type = args.type,\n            genericType = args.genericType;\n        var api = this.apis.getApi(handle);\n\n        if (api) {\n          return api;\n        }\n\n        var factory = this.definition.generate(type);\n        api = factory(this, handle, id, genericType);\n        this.apis.add(handle, api);\n        return api;\n      }\n      /**\n      * Establishes the websocket against the configured URL and returns the Global instance.\n      * @emits Session#opened\n      * @returns {Promise<Object>} Eventually resolved if the connection was successful.\n      */\n\n    }, {\n      key: \"open\",\n      value: function open() {\n        var _this3 = this;\n\n        /**\n         * Handle opened state. This event is triggered whenever the websocket is connected and ready for\n         * communication.\n         * @event Session#opened\n         * @type {Object}\n         */\n        if (!this.globalPromise) {\n          var args = {\n            handle: -1,\n            id: 'Global',\n            type: 'Global',\n            genericType: 'Global'\n          };\n          this.globalPromise = this.rpc.open().then(function () {\n            return _this3.getObjectApi(args);\n          }).then(function (global) {\n            _this3.emit('opened');\n\n            return global;\n          });\n        }\n\n        return this.globalPromise;\n      }\n      /**\n      * Function used to send data on the RPC socket.\n      * @param {Object} request The request to be sent. (data and some meta info)\n      * @returns {Object} Returns a promise instance.\n      */\n\n    }, {\n      key: \"send\",\n      value: function send(request) {\n        var _this4 = this;\n\n        if (this.suspendResume.isSuspended) {\n          return this.Promise.reject(createEnigmaError(errorCodes.SESSION_SUSPENDED, 'Session suspended'));\n        }\n\n        request.id = this.rpc.createRequestId();\n        var promise = this.intercept.executeRequests(this, this.Promise.resolve(request)).then(function (augmentedRequest) {\n          var data = _objectSpread({}, _this4.config.protocol, {}, augmentedRequest); // the outKey value is used by multiple-out interceptor, at some point\n          // we need to refactor that implementation and figure out how to transport\n          // this value without hijacking the JSONRPC request object:\n\n\n          delete data.outKey;\n\n          var response = _this4.rpc.send(data);\n\n          augmentedRequest.retry = function () {\n            return _this4.send(request);\n          };\n\n          return _this4.intercept.executeResponses(_this4, response, augmentedRequest);\n        });\n        Session.addToPromiseChain(promise, 'requestId', request.id);\n        return promise;\n      }\n      /**\n      * Suspends the enigma.js session by closing the websocket and rejecting all method calls\n      * until is has been resumed again.\n      * @emits Session#suspended\n      * @param {Number} [code=4000] - The reason code for suspending the connection.\n      * @param {String} [reason=\"\"] - The human readable string describing\n      * why the connection is suspended.\n      * @returns {Promise<Object>} Eventually resolved when the websocket has been closed.\n      */\n\n    }, {\n      key: \"suspend\",\n      value: function suspend() {\n        var _this5 = this;\n\n        var code = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 4000;\n        var reason = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n        return this.suspendResume.suspend(code, reason).then(function () {\n          return _this5.emit('suspended', {\n            initiator: 'manual',\n            code: code,\n            reason: reason\n          });\n        });\n      }\n      /**\n      * Resumes a previously suspended enigma.js session by re-creating the websocket and,\n      * if possible, re-open the document as well as refreshing the internal cashes. If successful,\n      * changed events will be triggered on all generated APIs, and on the ones it was unable to\n      * restore, the closed event will be triggered.\n      * @emits Session#resumed\n      * @param {Boolean} onlyIfAttached If true, resume only if the session was re-attached properly.\n      * @returns {Promise<Object>} Eventually resolved when the websocket (and potentially the\n      * previously opened document, and generated APIs) has been restored, rejected when it fails any\n      * of those steps, or when onlyIfAttached is true and a new session was created.\n      */\n\n    }, {\n      key: \"resume\",\n      value: function resume(onlyIfAttached) {\n        var _this6 = this;\n\n        /**\n         * Handle resumed state. This event is triggered when the session was properly resumed. It is\n         * useful in scenarios where you for example can close blocking modal dialogs and allow the user\n         * to interact with your application again.\n         * @event Session#resumed\n         * @type {Object}\n         */\n        return this.suspendResume.resume(onlyIfAttached).then(function (value) {\n          _this6.emit('resumed');\n\n          return value;\n        });\n      }\n      /**\n      * Closes the websocket and cleans up internal caches, also triggers the closed event\n      * on all generated APIs. Note that you have to manually invoke this when you want to\n      * close a session and config.suspendOnClose is true.\n      * @emits Session#closed\n      * @param {Number} [code=1000] - The reason code for closing the connection.\n      * @param {String} [reason=\"\"] - The human readable string describing why the connection is closed.\n      * @returns {Promise<Object>} Eventually resolved when the websocket has been closed.\n      */\n\n    }, {\n      key: \"close\",\n      value: function close() {\n        var _this7 = this;\n\n        var code = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1000;\n        var reason = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n        /**\n         * Handle closed state. This event is triggered when the underlying websocket is closed and\n         * config.suspendOnClose is false.\n         * @event Session#closed\n         * @type {Object}\n         */\n        this.globalPromise = undefined;\n        return this.rpc.close(code, reason).then(function (evt) {\n          return _this7.emit('closed', evt);\n        });\n      }\n      /**\n      * Given a handle, this function will emit the 'changed' event on the\n      * corresponding API instance.\n      * @private\n      * @param {Number} handle The handle of the API instance.\n      * @emits API#changed\n      */\n\n    }, {\n      key: \"emitHandleChanged\",\n      value: function emitHandleChanged(handle) {\n        var api = this.apis.getApi(handle);\n\n        if (api) {\n          api.emit('changed');\n        }\n      }\n      /**\n      * Given a handle, this function will emit the 'closed' event on the\n      * corresponding API instance.\n      * @private\n      * @param {Number} handle The handle of the API instance.\n      * @emits API#closed\n      */\n\n    }, {\n      key: \"emitHandleClosed\",\n      value: function emitHandleClosed(handle) {\n        var api = this.apis.getApi(handle);\n\n        if (api) {\n          api.emit('closed');\n          api.removeAllListeners();\n        }\n      }\n      /**\n      * Function used to add info on the promise chain.\n      * @private\n      * @param {Promise<Object>} promise The promise to add info on.\n      * @param {String} name The property to add info on.\n      * @param {Any} value The info to add.\n      */\n\n    }], [{\n      key: \"addToPromiseChain\",\n      value: function addToPromiseChain(promise, name, value) {\n        promise[name] = value;\n        var then = promise.then;\n\n        promise.then = function patchedThen() {\n          for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n            params[_key] = arguments[_key];\n          }\n\n          var chain = then.apply(this, params);\n          Session.addToPromiseChain(chain, name, value);\n          return chain;\n        };\n      }\n    }]);\n\n    return Session;\n  }();\n\n  function _classCallCheck$2(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties$1(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass$1(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$1(Constructor.prototype, protoProps); if (staticProps) _defineProperties$1(Constructor, staticProps); return Constructor; }\n  /**\n  * Key-value cache\n  * @private\n  */\n\n  var KeyValueCache =\n  /*#__PURE__*/\n  function () {\n    function KeyValueCache() {\n      _classCallCheck$2(this, KeyValueCache);\n\n      this.entries = {};\n    }\n    /**\n    * Adds an entry.\n    * @private\n    * @function KeyValueCache#add\n    * @param {String} key The key representing an entry.\n    * @param {*} entry The entry to be added.\n    */\n\n\n    _createClass$1(KeyValueCache, [{\n      key: \"add\",\n      value: function add(key, entry) {\n        key += '';\n\n        if (typeof this.entries[key] !== 'undefined') {\n          throw createEnigmaError(errorCodes.ENTRY_ALREADY_DEFINED, \"Entry already defined with key \".concat(key));\n        }\n\n        this.entries[key] = entry;\n      }\n      /**\n      * Sets an entry.\n      * @private\n      * @function KeyValueCache#set\n      * @param {String} key The key representing an entry.\n      * @param {*} entry The entry.\n      */\n\n    }, {\n      key: \"set\",\n      value: function set(key, entry) {\n        key += '';\n        this.entries[key] = entry;\n      }\n      /**\n      * Removes an entry.\n      * @private\n      * @function KeyValueCache#remove\n      * @param {String} key The key representing an entry.\n      */\n\n    }, {\n      key: \"remove\",\n      value: function remove(key) {\n        delete this.entries[key];\n      }\n      /**\n      * Gets an entry.\n      * @private\n      * @function KeyValueCache#get\n      * @param {String} key The key representing an entry.\n      * @returns {*} The entry for the key.\n      */\n\n    }, {\n      key: \"get\",\n      value: function get(key) {\n        return this.entries[key];\n      }\n      /**\n      * Gets a list of all entries.\n      * @private\n      * @function KeyValueCache#getAll\n      * @returns {Array} The list of entries including its `key` and `value` properties.\n      */\n\n    }, {\n      key: \"getAll\",\n      value: function getAll() {\n        var _this = this;\n\n        return Object.keys(this.entries).map(function (key) {\n          return {\n            key: key,\n            value: _this.entries[key]\n          };\n        });\n      }\n      /**\n      * Gets a key for an entry.\n      * @private\n      * @function KeyValueCache#getKey\n      * @param {*} entry The entry to locate the key for.\n      * @returns {String} The key representing an entry.\n      */\n\n    }, {\n      key: \"getKey\",\n      value: function getKey(entry) {\n        var _this2 = this;\n\n        return Object.keys(this.entries).filter(function (key) {\n          return _this2.entries[key] === entry;\n        })[0];\n      }\n      /**\n      * Clears the cache of all entries.\n      * @private\n      * @function KeyValueCache#clear\n      */\n\n    }, {\n      key: \"clear\",\n      value: function clear() {\n        this.entries = {};\n      }\n    }]);\n\n    return KeyValueCache;\n  }();\n\n  function _classCallCheck$3(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties$2(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass$2(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$2(Constructor.prototype, protoProps); if (staticProps) _defineProperties$2(Constructor, staticProps); return Constructor; }\n\n  function _typeof$1(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$1 = function _typeof(obj) { return typeof obj; }; } else { _typeof$1 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$1(obj); }\n  var hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n  /**\n  * Returns the camelCase counterpart of a symbol.\n  * @private\n  * @param {String} symbol The symbol.\n  * @return the camelCase counterpart.\n  */\n\n  function toCamelCase(symbol) {\n    return symbol.substring(0, 1).toLowerCase() + symbol.substring(1);\n  }\n  /**\n   * A facade function that allows parameters to be passed either by name\n   * (through an object), or by position (through an array).\n   * @private\n   * @param {Function} base The function that is being overriden. Will be\n   *                        called with parameters in array-form.\n   * @param {Object} defaults Parameter list and it's default values.\n   * @param {*} params The parameters.\n   */\n\n\n  function namedParamFacade(base, defaults) {\n    for (var _len = arguments.length, params = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      params[_key - 2] = arguments[_key];\n    }\n\n    if (params.length === 1 && _typeof$1(params[0]) === 'object' && !Array.isArray(params[0])) {\n      var valid = Object.keys(params[0]).every(function (key) {\n        return hasOwnProperty$1.call(defaults, key);\n      });\n\n      if (valid) {\n        params = Object.keys(defaults).map(function (key) {\n          return params[0][key] || defaults[key];\n        });\n      }\n    }\n\n    return base.apply(this, params);\n  }\n  /**\n  * Qix schema definition.\n  * @private\n  */\n\n\n  var Schema =\n  /*#__PURE__*/\n  function () {\n    /**\n    * Create a new schema instance.\n    * @private\n    * @param {Configuration} config The configuration for QIX.\n    */\n    function Schema(config) {\n      _classCallCheck$3(this, Schema);\n\n      this.config = config;\n      this.Promise = config.Promise;\n      this.schema = config.schema;\n      this.mixins = new KeyValueCache();\n      this.types = new KeyValueCache();\n    }\n\n    _createClass$2(Schema, [{\n      key: \"registerMixin\",\n      value: function registerMixin(_ref) {\n        var _this = this;\n\n        var types = _ref.types,\n            type = _ref.type,\n            extend = _ref.extend,\n            override = _ref.override,\n            init = _ref.init;\n\n        if (!Array.isArray(types)) {\n          types = [types];\n        } // to support a single type\n\n\n        if (type) {\n          types.push(type);\n        }\n\n        var cached = {\n          extend: extend,\n          override: override,\n          init: init\n        };\n        types.forEach(function (typeKey) {\n          var entryList = _this.mixins.get(typeKey);\n\n          if (entryList) {\n            entryList.push(cached);\n          } else {\n            _this.mixins.add(typeKey, [cached]);\n          }\n        });\n      }\n      /**\n      * Function used to generate a type definition.\n      * @private\n      * @param {String} type The type.\n      * @returns {{create: Function, def: Object}} Returns an object with a definition\n      *          of the type and a create factory.\n      */\n\n    }, {\n      key: \"generate\",\n      value: function generate(type) {\n        var entry = this.types.get(type);\n\n        if (entry) {\n          return entry;\n        }\n\n        if (!this.schema.structs[type]) {\n          throw createEnigmaError(errorCodes.SCHEMA_STRUCT_TYPE_NOT_FOUND, \"\".concat(type, \" not found\"));\n        }\n\n        var factory = this.generateApi(type, this.schema.structs[type]);\n        this.types.add(type, factory);\n        return factory;\n      }\n      /**\n      * Function used to generate an API definition for a given type.\n      * @private\n      * @param {String} type The type to generate.\n      * @param {Object} schema The schema describing the type.\n      * @returns {{create: (function(session:Object, handle:Number, id:String,\n      *          customKey:String)), def: Object}} Returns the API definition.\n      */\n\n    }, {\n      key: \"generateApi\",\n      value: function generateApi(type, schema) {\n        var api = Object.create({});\n        this.generateDefaultApi(api, schema); // Generate default\n\n        this.mixinType(type, api); // Mixin default type\n\n        this.mixinNamedParamFacade(api, schema); // Mixin named parameter support\n\n        return function create(session, handle, id, customKey) {\n          var _this2 = this;\n\n          var instance = Object.create(api);\n          Events.mixin(instance); // Always mixin event-emitter per instance\n\n          Object.defineProperties(instance, {\n            session: {\n              enumerable: true,\n              value: session\n            },\n            handle: {\n              enumerable: true,\n              value: handle,\n              writable: true\n            },\n            id: {\n              enumerable: true,\n              value: id\n            },\n            type: {\n              enumerable: true,\n              value: type\n            },\n            genericType: {\n              enumerable: true,\n              value: customKey\n            }\n          });\n          var mixinList = this.mixins.get(type) || [];\n\n          if (customKey !== type) {\n            this.mixinType(customKey, instance); // Mixin custom types\n\n            mixinList = mixinList.concat(this.mixins.get(customKey) || []);\n          }\n\n          mixinList.forEach(function (mixin) {\n            if (typeof mixin.init === 'function') {\n              mixin.init({\n                config: _this2.config,\n                api: instance\n              });\n            }\n          });\n          return instance;\n        }.bind(this);\n      }\n      /**\n      * Function used to generate the methods with the right handlers to the object\n      * API that is being generated.\n      * @private\n      * @param {Object} api The object API that is currently being generated.\n      * @param {Object} schema The API definition.\n      */\n\n    }, {\n      key: \"generateDefaultApi\",\n      value: function generateDefaultApi(api, schema) {\n        Object.keys(schema).forEach(function (method) {\n          var out = schema[method].Out;\n          var outKey = out.length === 1 ? out[0].Name : -1;\n          var fnName = toCamelCase(method);\n\n          api[fnName] = function generatedMethod() {\n            for (var _len2 = arguments.length, params = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n              params[_key2] = arguments[_key2];\n            }\n\n            return this.session.send({\n              handle: this.handle,\n              method: method,\n              params: params,\n              outKey: outKey\n            });\n          };\n        });\n      }\n      /**\n      * Function used to add mixin methods to a specified API.\n      * @private\n      * @param {String} type Used to specify which mixin should be woven in.\n      * @param {Object} api The object that will be woven.\n      */\n\n    }, {\n      key: \"mixinType\",\n      value: function mixinType(type, api) {\n        var mixinList = this.mixins.get(type);\n\n        if (mixinList) {\n          mixinList.forEach(function (_ref2) {\n            var _ref2$extend = _ref2.extend,\n                extend = _ref2$extend === void 0 ? {} : _ref2$extend,\n                _ref2$override = _ref2.override,\n                override = _ref2$override === void 0 ? {} : _ref2$override;\n            Object.keys(override).forEach(function (key) {\n              if (typeof api[key] === 'function' && typeof override[key] === 'function') {\n                var baseFn = api[key];\n\n                api[key] = function wrappedFn() {\n                  for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                    args[_key3] = arguments[_key3];\n                  }\n\n                  return override[key].apply(this, [baseFn.bind(this)].concat(args));\n                };\n              } else {\n                throw createEnigmaError(errorCodes.SCHEMA_MIXIN_CANT_OVERRIDE_FUNCTION, \"No function to override. Type: \".concat(type, \" function: \").concat(key));\n              }\n            });\n            Object.keys(extend).forEach(function (key) {\n              // handle overrides\n              if (typeof api[key] === 'function' && typeof extend[key] === 'function') {\n                throw createEnigmaError(errorCodes.SCHEMA_MIXIN_EXTEND_NOT_ALLOWED, \"Extend is not allowed for this mixin. Type: \".concat(type, \" function: \").concat(key));\n              } else {\n                api[key] = extend[key];\n              }\n            });\n          });\n        }\n      }\n      /**\n      * Function used to mixin the named parameter facade.\n      * @private\n      * @param {Object} api The object API that is currently being generated.\n      * @param {Object} schema The API definition.\n      */\n\n    }, {\n      key: \"mixinNamedParamFacade\",\n      value: function mixinNamedParamFacade(api, schema) {\n        Object.keys(schema).forEach(function (key) {\n          var fnName = toCamelCase(key);\n          var base = api[fnName];\n          var defaults = schema[key].In.reduce(function (result, item) {\n            result[item.Name] = item.DefaultValue;\n            return result;\n          }, {});\n\n          api[fnName] = function namedParamWrapper() {\n            for (var _len4 = arguments.length, params = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n              params[_key4] = arguments[_key4];\n            }\n\n            return namedParamFacade.apply(this, [base, defaults].concat(params));\n          };\n        });\n      }\n    }]);\n\n    return Schema;\n  }();\n\n  function _classCallCheck$4(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties$3(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass$3(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$3(Constructor.prototype, protoProps); if (staticProps) _defineProperties$3(Constructor, staticProps); return Constructor; }\n  /**\n   * Helper class for handling RPC calls\n   * @private\n   */\n\n  var RPCResolver =\n  /*#__PURE__*/\n  function () {\n    function RPCResolver(id, handle, resolve, reject) {\n      _classCallCheck$4(this, RPCResolver);\n\n      Events.mixin(this);\n      this.id = id;\n      this.handle = handle;\n      this.resolve = resolve;\n      this.reject = reject;\n    }\n\n    _createClass$3(RPCResolver, [{\n      key: \"resolveWith\",\n      value: function resolveWith(data) {\n        this.resolve(data);\n        this.emit('resolved', this.id);\n      }\n    }, {\n      key: \"rejectWith\",\n      value: function rejectWith(err) {\n        this.reject(err);\n        this.emit('rejected', this.id);\n      }\n    }]);\n\n    return RPCResolver;\n  }();\n\n  function _classCallCheck$5(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties$4(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass$4(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$4(Constructor.prototype, protoProps); if (staticProps) _defineProperties$4(Constructor, staticProps); return Constructor; }\n  /**\n  * This class handles remote procedure calls on a web socket.\n  * @private\n  */\n\n  var RPC =\n  /*#__PURE__*/\n  function () {\n    /**\n    * Create a new RPC instance.\n    * @private\n    * @param {Object} options The configuration options for this class.\n    * @param {Function} options.Promise The promise constructor to use.\n    * @param {String} options.url The complete websocket URL used to connect.\n    * @param {Function} options.createSocket The function callback to create a WebSocket.\n    */\n    function RPC(options) {\n      _classCallCheck$5(this, RPC);\n\n      Object.assign(this, options);\n      Events.mixin(this);\n      this.resolvers = {};\n      this.requestId = 0;\n      this.openedPromise = undefined;\n    }\n    /**\n    * Opens a connection to the configured endpoint.\n    * @private\n    * @param {Boolean} force - ignores all previous and outstanding open calls if set to true.\n    * @returns {Object} A promise instance.\n    */\n\n\n    _createClass$4(RPC, [{\n      key: \"open\",\n      value: function open() {\n        var _this = this;\n\n        var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n        if (!force && this.openedPromise) {\n          return this.openedPromise;\n        }\n\n        try {\n          this.socket = this.createSocket(this.url);\n        } catch (err) {\n          return this.Promise.reject(err);\n        }\n\n        this.socket.onopen = this.onOpen.bind(this);\n        this.socket.onclose = this.onClose.bind(this);\n        this.socket.onerror = this.onError.bind(this);\n        this.socket.onmessage = this.onMessage.bind(this);\n        this.openedPromise = new this.Promise(function (resolve, reject) {\n          return _this.registerResolver('opened', null, resolve, reject);\n        });\n        this.closedPromise = new this.Promise(function (resolve, reject) {\n          return _this.registerResolver('closed', null, resolve, reject);\n        });\n        return this.openedPromise;\n      }\n      /**\n      * Resolves the open promise when a connection is successfully established.\n      * @private\n      */\n\n    }, {\n      key: \"onOpen\",\n      value: function onOpen() {\n        var _this2 = this;\n\n        this.resolvers.opened.resolveWith(function () {\n          return _this2.closedPromise;\n        });\n      }\n      /**\n      * Resolves the close promise when a connection is closed.\n      * @private\n      * @param {Object} event - The event describing close.\n      */\n\n    }, {\n      key: \"onClose\",\n      value: function onClose(event) {\n        this.emit('closed', event);\n\n        if (this.resolvers && this.resolvers.closed) {\n          this.resolvers.closed.resolveWith(event);\n        }\n\n        this.rejectAllOutstandingResolvers({\n          code: -1,\n          message: 'Socket closed'\n        });\n      }\n      /**\n      * Closes a connection.\n      * @private\n      * @param {Number} [code=1000] - The reason code for closing the connection.\n      * @param {String} [reason=\"\"] - The human readable string describing why the connection is closed.\n      * @returns {Object} Returns a promise instance.\n      */\n\n    }, {\n      key: \"close\",\n      value: function close() {\n        var code = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1000;\n        var reason = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n\n        if (this.socket) {\n          this.socket.close(code, reason);\n          this.socket = null;\n        }\n\n        return this.closedPromise;\n      }\n      /**\n      * Emits an error event and rejects the open promise if an error is raised on the connection.\n      * @private\n      * @param {Object} event - The event describing the error.\n      */\n\n    }, {\n      key: \"onError\",\n      value: function onError(event) {\n        if (this.resolvers.opened) {\n          this.resolvers.opened.rejectWith(event);\n        } else {\n          // only emit errors after the initial open promise has been resolved,\n          // this makes it possible to catch early websocket errors as well\n          // as run-time ones:\n          this.emit('socket-error', event);\n        }\n\n        this.rejectAllOutstandingResolvers({\n          code: -1,\n          message: 'Socket error'\n        });\n      }\n      /**\n      * Parses the onMessage event on the connection and resolve the promise for the request.\n      * @private\n      * @param {Object} event - The event describing the message.\n      */\n\n    }, {\n      key: \"onMessage\",\n      value: function onMessage(event) {\n        var data = JSON.parse(event.data);\n        var resolver = this.resolvers[data.id] || {};\n        this.emit('traffic', 'received', data, resolver.handle);\n\n        if (typeof data.id !== 'undefined') {\n          this.emit('message', data);\n          this.resolvers[data.id].resolveWith(data);\n        } else {\n          this.emit(data.params ? 'notification' : 'message', data);\n        }\n      }\n      /**\n      * Rejects all outstanding resolvers.\n      * @private\n      * @param {Object} reason - The reject reason.\n      */\n\n    }, {\n      key: \"rejectAllOutstandingResolvers\",\n      value: function rejectAllOutstandingResolvers(reason) {\n        var _this3 = this;\n\n        Object.keys(this.resolvers).forEach(function (id) {\n          if (id === 'opened' || id === 'closed') {\n            return; // \"opened\" and \"closed\" should not be handled here\n          }\n\n          var resolver = _this3.resolvers[id];\n          resolver.rejectWith(reason);\n        });\n      }\n      /**\n      * Unregisters a resolver.\n      * @private\n      * @param {Number|String} id - The ID to unregister the resolver with.\n      */\n\n    }, {\n      key: \"unregisterResolver\",\n      value: function unregisterResolver(id) {\n        var resolver = this.resolvers[id];\n        resolver.removeAllListeners();\n        delete this.resolvers[id];\n      }\n      /**\n      * Registers a resolver.\n      * @private\n      * @param {Number|String} id - The ID to register the resolver with.\n      * @param {Number} handle - The associated handle.\n      * @returns {Function} The promise executor function.\n      */\n\n    }, {\n      key: \"registerResolver\",\n      value: function registerResolver(id, handle, resolve, reject) {\n        var _this4 = this;\n\n        var resolver = new RPCResolver(id, handle, resolve, reject);\n        this.resolvers[id] = resolver;\n        resolver.on('resolved', function (resolvedId) {\n          return _this4.unregisterResolver(resolvedId);\n        });\n        resolver.on('rejected', function (rejectedId) {\n          return _this4.unregisterResolver(rejectedId);\n        });\n      }\n      /**\n      * Sends data on the socket.\n      * @private\n      * @param {Object} data - The data to send.\n      * @returns {Object} A promise instance.\n      */\n\n    }, {\n      key: \"send\",\n      value: function send(data) {\n        var _this5 = this;\n\n        if (!this.socket || this.socket.readyState !== this.socket.OPEN) {\n          var error = createEnigmaError(errorCodes.NOT_CONNECTED, 'Not connected');\n          return this.Promise.reject(error);\n        }\n\n        if (!data.id) {\n          data.id = this.createRequestId();\n        }\n\n        data.jsonrpc = '2.0';\n        return new this.Promise(function (resolve, reject) {\n          _this5.socket.send(JSON.stringify(data));\n\n          _this5.emit('traffic', 'sent', data, data.handle);\n\n          return _this5.registerResolver(data.id, data.handle, resolve, reject);\n        });\n      }\n    }, {\n      key: \"createRequestId\",\n      value: function createRequestId() {\n        this.requestId += 1;\n        return this.requestId;\n      }\n    }]);\n\n    return RPC;\n  }();\n\n  function _classCallCheck$6(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties$5(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass$5(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$5(Constructor.prototype, protoProps); if (staticProps) _defineProperties$5(Constructor, staticProps); return Constructor; }\n  var ON_ATTACHED_TIMEOUT_MS = 5000;\n  var RPC_CLOSE_MANUAL_SUSPEND$1 = 4000;\n\n  var SuspendResume =\n  /*#__PURE__*/\n  function () {\n    /**\n    * Creates a new SuspendResume instance.\n    * @private\n    * @param {Object} options The configuration option for this class.\n    * @param {Promise<Object>} options.Promise The promise constructor to use.\n    * @param {RPC} options.rpc The RPC instance to use when communicating towards Engine.\n    * @param {ApiCache} options.apis The ApiCache instance to use.\n    */\n    function SuspendResume(options) {\n      var _this = this;\n\n      _classCallCheck$6(this, SuspendResume);\n\n      Object.assign(this, options);\n      this.isSuspended = false;\n      this.rpc.on('traffic', function (dir, data) {\n        if (dir === 'sent' && data.method === 'OpenDoc') {\n          _this.openDocParams = data.params;\n        }\n      });\n    }\n    /**\n    * Function used to restore the rpc connection.\n    * @private\n    * @param {Boolean} onlyIfAttached - if true, the returned promise will resolve\n    *                                   only if the session can be re-attached.\n    * @returns {Object} Returns a promise instance.\n    */\n\n\n    _createClass$5(SuspendResume, [{\n      key: \"restoreRpcConnection\",\n      value: function restoreRpcConnection(onlyIfAttached) {\n        var _this2 = this;\n\n        return this.reopen(ON_ATTACHED_TIMEOUT_MS).then(function (sessionState) {\n          if (sessionState === 'SESSION_CREATED' && onlyIfAttached) {\n            return _this2.Promise.reject(createEnigmaError(errorCodes.SESSION_NOT_ATTACHED, 'Not attached'));\n          }\n\n          return _this2.Promise.resolve();\n        });\n      }\n      /**\n      * Function used to restore the global API.\n      * @private\n      * @param {Object} changed - A list where the restored APIs will be added.\n      * @returns {Object} Returns a promise instance.\n      */\n\n    }, {\n      key: \"restoreGlobal\",\n      value: function restoreGlobal(changed) {\n        var global = this.apis.getApisByType('Global').pop();\n        changed.push(global.api);\n        return this.Promise.resolve();\n      }\n      /**\n      * Function used to restore the doc API.\n      * @private\n      * @param {String} sessionState - The state of the session, attached or created.\n      * @param {Array} closed - A list where the closed of APIs APIs will be added.\n      * @param {Object} changed - A list where the restored APIs will be added.\n      * @returns {Object} Returns a promise instance.\n      */\n\n    }, {\n      key: \"restoreDoc\",\n      value: function restoreDoc(closed, changed) {\n        var _this3 = this;\n\n        var doc = this.apis.getApisByType('Doc').pop();\n\n        if (!doc) {\n          return this.Promise.resolve();\n        }\n\n        return this.rpc.send({\n          method: 'GetActiveDoc',\n          handle: -1,\n          params: []\n        }).then(function (response) {\n          if (response.error && _this3.openDocParams) {\n            return _this3.rpc.send({\n              method: 'OpenDoc',\n              handle: -1,\n              params: _this3.openDocParams\n            });\n          }\n\n          return response;\n        }).then(function (response) {\n          if (response.error) {\n            closed.push(doc.api);\n            return _this3.Promise.resolve();\n          }\n\n          var handle = response.result.qReturn.qHandle;\n          doc.api.handle = handle;\n          changed.push(doc.api);\n          return _this3.Promise.resolve(doc.api);\n        });\n      }\n      /**\n      * Function used to restore the APIs on the doc.\n      * @private\n      * @param {Object} doc - The doc API on which the APIs we want to restore exist.\n      * @param {Array} closed - A list where the closed of APIs APIs will be added.\n      * @param {Object} changed - A list where the restored APIs will be added.\n      * @returns {Object} Returns a promise instance.\n      */\n\n    }, {\n      key: \"restoreDocObjects\",\n      value: function restoreDocObjects(doc, closed, changed) {\n        var _this4 = this;\n\n        var tasks = [];\n        var apis = this.apis.getApis().map(function (entry) {\n          return entry.api;\n        }).filter(function (api) {\n          return api.type !== 'Global' && api.type !== 'Doc';\n        });\n\n        if (!doc) {\n          apis.forEach(function (api) {\n            return closed.push(api);\n          });\n          return this.Promise.resolve();\n        }\n\n        apis.forEach(function (api) {\n          var method = SuspendResume.buildGetMethodName(api.type);\n\n          if (!method) {\n            closed.push(api);\n          } else {\n            var request = _this4.rpc.send({\n              method: method,\n              handle: doc.handle,\n              params: [api.id]\n            }).then(function (response) {\n              if (response.error || !response.result.qReturn.qHandle) {\n                closed.push(api);\n              } else {\n                api.handle = response.result.qReturn.qHandle;\n                changed.push(api);\n              }\n            });\n\n            tasks.push(request);\n          }\n        });\n        return this.Promise.all(tasks);\n      }\n      /**\n      * Set the instance as suspended.\n      * @private\n      * @param {Number} [code=4000] - The reason code for suspending the connection.\n      * @param {String} [reason=\"\"] - The human readable string describing\n      * why the connection is suspended.\n      */\n\n    }, {\n      key: \"suspend\",\n      value: function suspend() {\n        var code = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : RPC_CLOSE_MANUAL_SUSPEND$1;\n        var reason = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n        this.isSuspended = true;\n        return this.rpc.close(code, reason);\n      }\n      /**\n      * Resumes a previously suspended RPC connection, and refreshes the API cache.\n      *                                APIs unabled to be restored has their 'closed'\n      *                                event triggered, otherwise 'changed'.\n      * @private\n      * @emits API#changed\n      * @emits APIfunction@#closed\n      * @param {Boolean} onlyIfAttached if true, resume only if the session was re-attached.\n      * @returns {Promise<Object>} Eventually resolved if the RPC connection was successfully resumed,\n      *                    otherwise rejected.\n      */\n\n    }, {\n      key: \"resume\",\n      value: function resume(onlyIfAttached) {\n        var _this5 = this;\n\n        var changed = [];\n        var closed = [];\n        return this.restoreRpcConnection(onlyIfAttached).then(function () {\n          return _this5.restoreGlobal(changed);\n        }).then(function () {\n          return _this5.restoreDoc(closed, changed);\n        }).then(function (doc) {\n          return _this5.restoreDocObjects(doc, closed, changed);\n        }).then(function () {\n          _this5.isSuspended = false;\n\n          _this5.apis.clear();\n\n          closed.forEach(function (api) {\n            api.emit('closed');\n            api.removeAllListeners();\n          });\n          changed.forEach(function (api) {\n            _this5.apis.add(api.handle, api);\n\n            if (api.type !== 'Global') {\n              api.emit('changed');\n            }\n          });\n        })[\"catch\"](function (err) {\n          return _this5.rpc.close().then(function () {\n            return _this5.Promise.reject(err);\n          });\n        });\n      }\n      /**\n      * Reopens the connection and waits for the OnConnected notification.\n      * @private\n      * @param {Number} timeout - The time to wait for the OnConnected notification.\n      * @returns {Object} A promise containing the session state (SESSION_CREATED or SESSION_ATTACHED).\n      */\n\n    }, {\n      key: \"reopen\",\n      value: function reopen(timeout) {\n        var _this6 = this;\n\n        var timer;\n        var notificationResolve;\n        var notificationReceived = false;\n        var notificationPromise = new this.Promise(function (resolve) {\n          notificationResolve = resolve;\n        });\n\n        var waitForNotification = function waitForNotification() {\n          if (!notificationReceived) {\n            timer = setTimeout(function () {\n              return notificationResolve('SESSION_CREATED');\n            }, timeout);\n          }\n\n          return notificationPromise;\n        };\n\n        var onNotification = function onNotification(data) {\n          if (data.method !== 'OnConnected') return;\n          clearTimeout(timer);\n          notificationResolve(data.params.qSessionState);\n          notificationReceived = true;\n        };\n\n        this.rpc.on('notification', onNotification);\n        return this.rpc.open(true).then(waitForNotification).then(function (state) {\n          _this6.rpc.removeListener('notification', onNotification);\n\n          return state;\n        })[\"catch\"](function (err) {\n          _this6.rpc.removeListener('notification', onNotification);\n\n          return _this6.Promise.reject(err);\n        });\n      }\n      /**\n      * Function used to build the get method names for Doc APIs.\n      * @private\n      * @param {String} type - The API type.\n      * @returns {String} Returns the get method name, or undefined if the type cannot be restored.\n      */\n\n    }], [{\n      key: \"buildGetMethodName\",\n      value: function buildGetMethodName(type) {\n        if (type === 'Field' || type === 'Variable') {\n          return null;\n        }\n\n        if (type === 'GenericVariable') {\n          return 'GetVariableById';\n        }\n\n        return type.replace('Generic', 'Get');\n      }\n    }]);\n\n    return SuspendResume;\n  }();\n\n  var SUCCESS_KEY = 'qSuccess';\n  function deltaRequestInterceptor(session, request) {\n    var delta = session.config.protocol.delta && request.outKey !== -1 && request.outKey !== SUCCESS_KEY;\n\n    if (delta) {\n      request.delta = delta;\n    }\n\n    return request;\n  }\n\n  /**\n  * Response interceptor for generating APIs. Handles the quirks of engine not\n  * returning an error when an object is missing.\n  * @private\n  * @param {Session} session - The session the intercept is being executed on.\n  * @param {Object} request - The JSON-RPC request.\n  * @param {Object} response - The response.\n  * @returns {Object} - Returns the generated API\n  */\n\n  function apiResponseInterceptor(session, request, response) {\n    if (response.qHandle && response.qType) {\n      return session.getObjectApi({\n        handle: response.qHandle,\n        type: response.qType,\n        id: response.qGenericId,\n        genericType: response.qGenericType\n      });\n    }\n\n    if (response.qHandle === null && response.qType === null) {\n      var error = createEnigmaError(errorCodes.OBJECT_NOT_FOUND, 'Object not found');\n      return session.config.Promise.reject(error);\n    }\n\n    return response;\n  }\n\n  var hasOwn = Object.prototype.hasOwnProperty;\n  var toStr = Object.prototype.toString;\n  var defineProperty = Object.defineProperty;\n  var gOPD = Object.getOwnPropertyDescriptor;\n\n  var isArray = function isArray(arr) {\n  \tif (typeof Array.isArray === 'function') {\n  \t\treturn Array.isArray(arr);\n  \t}\n\n  \treturn toStr.call(arr) === '[object Array]';\n  };\n\n  var isPlainObject = function isPlainObject(obj) {\n  \tif (!obj || toStr.call(obj) !== '[object Object]') {\n  \t\treturn false;\n  \t}\n\n  \tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n  \tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n  \t// Not own constructor property must be Object\n  \tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n  \t\treturn false;\n  \t}\n\n  \t// Own properties are enumerated firstly, so to speed up,\n  \t// if last one is own, then all properties are own.\n  \tvar key;\n  \tfor (key in obj) { /**/ }\n\n  \treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n  };\n\n  // If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\n  var setProperty = function setProperty(target, options) {\n  \tif (defineProperty && options.name === '__proto__') {\n  \t\tdefineProperty(target, options.name, {\n  \t\t\tenumerable: true,\n  \t\t\tconfigurable: true,\n  \t\t\tvalue: options.newValue,\n  \t\t\twritable: true\n  \t\t});\n  \t} else {\n  \t\ttarget[options.name] = options.newValue;\n  \t}\n  };\n\n  // Return undefined instead of __proto__ if '__proto__' is not an own property\n  var getProperty = function getProperty(obj, name) {\n  \tif (name === '__proto__') {\n  \t\tif (!hasOwn.call(obj, name)) {\n  \t\t\treturn void 0;\n  \t\t} else if (gOPD) {\n  \t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n  \t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n  \t\t\treturn gOPD(obj, name).value;\n  \t\t}\n  \t}\n\n  \treturn obj[name];\n  };\n\n  var extend = function extend() {\n  \tvar options, name, src, copy, copyIsArray, clone;\n  \tvar target = arguments[0];\n  \tvar i = 1;\n  \tvar length = arguments.length;\n  \tvar deep = false;\n\n  \t// Handle a deep copy situation\n  \tif (typeof target === 'boolean') {\n  \t\tdeep = target;\n  \t\ttarget = arguments[1] || {};\n  \t\t// skip the boolean and the target\n  \t\ti = 2;\n  \t}\n  \tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n  \t\ttarget = {};\n  \t}\n\n  \tfor (; i < length; ++i) {\n  \t\toptions = arguments[i];\n  \t\t// Only deal with non-null/undefined values\n  \t\tif (options != null) {\n  \t\t\t// Extend the base object\n  \t\t\tfor (name in options) {\n  \t\t\t\tsrc = getProperty(target, name);\n  \t\t\t\tcopy = getProperty(options, name);\n\n  \t\t\t\t// Prevent never-ending loop\n  \t\t\t\tif (target !== copy) {\n  \t\t\t\t\t// Recurse if we're merging plain objects or arrays\n  \t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n  \t\t\t\t\t\tif (copyIsArray) {\n  \t\t\t\t\t\t\tcopyIsArray = false;\n  \t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n  \t\t\t\t\t\t} else {\n  \t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n  \t\t\t\t\t\t}\n\n  \t\t\t\t\t\t// Never move original objects, clone them\n  \t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n  \t\t\t\t\t// Don't bring in undefined values\n  \t\t\t\t\t} else if (typeof copy !== 'undefined') {\n  \t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \t// Return the modified object\n  \treturn target;\n  };\n\n  function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\n  function _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\n  function _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\n  function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n  function _typeof$2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$2 = function _typeof(obj) { return typeof obj; }; } else { _typeof$2 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$2(obj); }\n  var extend$1 = extend.bind(null, true);\n  var JSONPatch = {};\n  var isArray$1 = Array.isArray;\n\n  function isObject(v) {\n    return v != null && !Array.isArray(v) && _typeof$2(v) === 'object';\n  }\n\n  function isUndef(v) {\n    return typeof v === 'undefined';\n  }\n\n  function isFunction(v) {\n    return typeof v === 'function';\n  }\n  /**\n  * Generate an exact duplicate (with no references) of a specific value.\n  *\n  * @private\n  * @param {Object} The value to duplicate\n  * @returns {Object} a unique, duplicated value\n  */\n\n\n  function generateValue(val) {\n    if (val) {\n      return extend$1({}, {\n        val: val\n      }).val;\n    }\n\n    return val;\n  }\n  /**\n  * An additional type checker used to determine if the property is of internal\n  * use or not a type that can be translated into JSON (like functions).\n  *\n  * @private\n  * @param {Object} obj The object which has the property to check\n  * @param {String} The property name to check\n  * @returns {Boolean} Whether the property is deemed special or not\n  */\n\n\n  function isSpecialProperty(obj, key) {\n    return isFunction(obj[key]) || key.substring(0, 2) === '$$' || key.substring(0, 1) === '_';\n  }\n  /**\n  * Finds the parent object from a JSON-Pointer (\"/foo/bar/baz\" = \"bar\" is \"baz\" parent),\n  * also creates the object structure needed.\n  *\n  * @private\n  * @param {Object} data The root object to traverse through\n  * @param {String} The JSON-Pointer string to use when traversing\n  * @returns {Object} The parent object\n  */\n\n\n  function getParent(data, str) {\n    var seperator = '/';\n    var parts = str.substring(1).split(seperator).slice(0, -1);\n    var numPart;\n    parts.forEach(function (part, i) {\n      if (i === parts.length) {\n        return;\n      }\n\n      numPart = +part;\n      var newPart = !isNaN(numPart) ? [] : {};\n      data[numPart || part] = isUndef(data[numPart || part]) ? newPart : data[part];\n      data = data[numPart || part];\n    });\n    return data;\n  }\n  /**\n  * Cleans an object of all its properties, unless they're deemed special or\n  * cannot be removed by configuration.\n  *\n  * @private\n  * @param {Object} obj The object to clean\n  */\n\n\n  function emptyObject(obj) {\n    Object.keys(obj).forEach(function (key) {\n      var config = Object.getOwnPropertyDescriptor(obj, key);\n\n      if (config.configurable && !isSpecialProperty(obj, key)) {\n        delete obj[key];\n      }\n    });\n  }\n  /**\n  * Compare an object with another, could be object, array, number, string, bool.\n  * @private\n  * @param {Object} a The first object to compare\n  * @param {Object} a The second object to compare\n  * @returns {Boolean} Whether the objects are identical\n  */\n\n\n  function compare(a, b) {\n    var isIdentical = true;\n\n    if (isObject(a) && isObject(b)) {\n      if (Object.keys(a).length !== Object.keys(b).length) {\n        return false;\n      }\n\n      Object.keys(a).forEach(function (key) {\n        if (!compare(a[key], b[key])) {\n          isIdentical = false;\n        }\n      });\n      return isIdentical;\n    }\n\n    if (isArray$1(a) && isArray$1(b)) {\n      if (a.length !== b.length) {\n        return false;\n      }\n\n      for (var i = 0, l = a.length; i < l; i += 1) {\n        if (!compare(a[i], b[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    return a === b;\n  }\n  /**\n  * Generates patches by comparing two arrays.\n  *\n  * @private\n  * @param {Array} oldA The old (original) array, which will be patched\n  * @param {Array} newA The new array, which will be used to compare against\n  * @returns {Array} An array of patches (if any)\n  */\n\n\n  function patchArray(original, newA, basePath) {\n    var patches = [];\n    var oldA = original.slice();\n    var tmpIdx = -1;\n\n    function findIndex(a, id, idx) {\n      if (a[idx] && isUndef(a[idx].qInfo)) {\n        return null;\n      }\n\n      if (a[idx] && a[idx].qInfo.qId === id) {\n        // shortcut if identical\n        return idx;\n      }\n\n      for (var ii = 0, ll = a.length; ii < ll; ii += 1) {\n        if (a[ii] && a[ii].qInfo.qId === id) {\n          return ii;\n        }\n      }\n\n      return -1;\n    }\n\n    if (compare(newA, oldA)) {\n      // array is unchanged\n      return patches;\n    }\n\n    if (!isUndef(newA[0]) && isUndef(newA[0].qInfo)) {\n      // we cannot create patches without unique identifiers, replace array...\n      patches.push({\n        op: 'replace',\n        path: basePath,\n        value: newA\n      });\n      return patches;\n    }\n\n    for (var i = oldA.length - 1; i >= 0; i -= 1) {\n      tmpIdx = findIndex(newA, oldA[i].qInfo && oldA[i].qInfo.qId, i);\n\n      if (tmpIdx === -1) {\n        patches.push({\n          op: 'remove',\n          path: \"\".concat(basePath, \"/\").concat(i)\n        });\n        oldA.splice(i, 1);\n      } else {\n        patches = patches.concat(JSONPatch.generate(oldA[i], newA[tmpIdx], \"\".concat(basePath, \"/\").concat(i)));\n      }\n    }\n\n    for (var _i = 0, l = newA.length; _i < l; _i += 1) {\n      tmpIdx = findIndex(oldA, newA[_i].qInfo && newA[_i].qInfo.qId);\n\n      if (tmpIdx === -1) {\n        patches.push({\n          op: 'add',\n          path: \"\".concat(basePath, \"/\").concat(_i),\n          value: newA[_i]\n        });\n        oldA.splice(_i, 0, newA[_i]);\n      } else if (tmpIdx !== _i) {\n        patches.push({\n          op: 'move',\n          path: \"\".concat(basePath, \"/\").concat(_i),\n          from: \"\".concat(basePath, \"/\").concat(tmpIdx)\n        });\n        oldA.splice(_i, 0, oldA.splice(tmpIdx, 1)[0]);\n      }\n    }\n\n    return patches;\n  }\n  /**\n  * Generate an array of JSON-Patch:es following the JSON-Patch Specification Draft.\n  *\n  * See [specification draft](http://tools.ietf.org/html/draft-ietf-appsawg-json-patch-10)\n  *\n  * Does NOT currently generate patches for arrays (will replace them)\n  * @private\n  * @param {Object} original The object to patch to\n  * @param {Object} newData The object to patch from\n  * @param {String} [basePath] The base path to use when generating the paths for\n  *                            the patches (normally not used)\n  * @returns {Array} An array of patches\n  */\n\n\n  JSONPatch.generate = function generate(original, newData, basePath) {\n    basePath = basePath || '';\n    var patches = [];\n    Object.keys(newData).forEach(function (key) {\n      var val = generateValue(newData[key]);\n      var oldVal = original[key];\n      var tmpPath = \"\".concat(basePath, \"/\").concat(key);\n\n      if (compare(val, oldVal) || isSpecialProperty(newData, key)) {\n        return;\n      }\n\n      if (isUndef(oldVal)) {\n        // property does not previously exist\n        patches.push({\n          op: 'add',\n          path: tmpPath,\n          value: val\n        });\n      } else if (isObject(val) && isObject(oldVal)) {\n        // we need to generate sub-patches for this, since it already exist\n        patches = patches.concat(JSONPatch.generate(oldVal, val, tmpPath));\n      } else if (isArray$1(val) && isArray$1(oldVal)) {\n        patches = patches.concat(patchArray(oldVal, val, tmpPath));\n      } else {\n        // it's a simple property (bool, string, number)\n        patches.push({\n          op: 'replace',\n          path: \"\".concat(basePath, \"/\").concat(key),\n          value: val\n        });\n      }\n    });\n    Object.keys(original).forEach(function (key) {\n      if (isUndef(newData[key]) && !isSpecialProperty(original, key)) {\n        // this property does not exist anymore\n        patches.push({\n          op: 'remove',\n          path: \"\".concat(basePath, \"/\").concat(key)\n        });\n      }\n    });\n    return patches;\n  };\n  /**\n  * Apply a list of patches to an object.\n  * @private\n  * @param {Object} original The object to patch\n  * @param {Array} patches The list of patches to apply\n  */\n\n\n  JSONPatch.apply = function apply(original, patches) {\n    patches.forEach(function (patch) {\n      var parent = getParent(original, patch.path);\n      var key = patch.path.split('/').splice(-1)[0];\n      var target = key && isNaN(+key) ? parent[key] : parent[+key] || parent;\n      var from = patch.from ? patch.from.split('/').splice(-1)[0] : null;\n\n      if (patch.path === '/') {\n        parent = null;\n        target = original;\n      }\n\n      if (patch.op === 'add' || patch.op === 'replace') {\n        if (isArray$1(parent)) {\n          // trust indexes from patches, so don't replace the index if it's an add\n          if (key === '-') {\n            key = parent.length;\n          }\n\n          parent.splice(+key, patch.op === 'add' ? 0 : 1, patch.value);\n        } else if (isArray$1(target) && isArray$1(patch.value)) {\n          var _target;\n\n          var newValues = patch.value.slice(); // keep array reference if possible...\n\n          target.length = 0;\n\n          (_target = target).push.apply(_target, _toConsumableArray(newValues));\n        } else if (isObject(target) && isObject(patch.value)) {\n          // keep object reference if possible...\n          emptyObject(target);\n          extend$1(target, patch.value);\n        } else if (!parent) {\n          throw createEnigmaError(errorCodes.PATCH_HAS_NO_PARENT, 'Patchee is not an object we can patch');\n        } else {\n          // simple value\n          parent[key] = patch.value;\n        }\n      } else if (patch.op === 'move') {\n        var oldParent = getParent(original, patch.from);\n\n        if (isArray$1(parent)) {\n          parent.splice(+key, 0, oldParent.splice(+from, 1)[0]);\n        } else {\n          parent[key] = oldParent[from];\n          delete oldParent[from];\n        }\n      } else if (patch.op === 'remove') {\n        if (isArray$1(parent)) {\n          parent.splice(+key, 1);\n        } else {\n          delete parent[key];\n        }\n      }\n    });\n  };\n  /**\n  * Deep clone an object.\n  * @private\n  * @param {Object} obj The object to clone\n  * @returns {Object} A new object identical to the `obj`\n  */\n\n\n  JSONPatch.clone = function clone(obj) {\n    return extend$1({}, obj);\n  };\n  /**\n  * Creates a JSON-patch.\n  * @private\n  * @param {String} op The operation of the patch. Available values: \"add\", \"remove\", \"move\"\n  * @param {Object} [val] The value to set the `path` to. If `op` is `move`, `val`\n  *                       is the \"from JSON-path\" path\n  * @param {String} path The JSON-path for the property to change (e.g. \"/qHyperCubeDef/columnOrder\")\n  * @returns {Object} A patch following the JSON-patch specification\n  */\n\n\n  JSONPatch.createPatch = function createPatch(op, val, path) {\n    var patch = {\n      op: op.toLowerCase(),\n      path: path\n    };\n\n    if (patch.op === 'move') {\n      patch.from = val;\n    } else if (typeof val !== 'undefined') {\n      patch.value = val;\n    }\n\n    return patch;\n  };\n  /**\n  * Apply the differences of two objects (keeping references if possible).\n  * Identical to running `JSONPatch.apply(original, JSONPatch.generate(original, newData));`\n  * @private\n  * @param {Object} original The object to update/patch\n  * @param {Object} newData the object to diff against\n  *\n  * @example\n  * var obj1 = { foo: [1,2,3], bar: { baz: true, qux: 1 } };\n  * var obj2 = { foo: [4,5,6], bar: { baz: false } };\n  * JSONPatch.updateObject(obj1, obj2);\n  * // => { foo: [4,5,6], bar: { baz: false } };\n  */\n\n\n  JSONPatch.updateObject = function updateObject(original, newData) {\n    if (!Object.keys(original).length) {\n      extend$1(original, newData);\n      return;\n    }\n\n    JSONPatch.apply(original, JSONPatch.generate(original, newData));\n  };\n\n  function _typeof$3(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$3 = function _typeof(obj) { return typeof obj; }; } else { _typeof$3 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$3(obj); }\n  var sessions = {};\n  /**\n  * Function to make sure we release handle caches when they are closed.\n  * @private\n  * @param {Session} session The session instance to listen on.\n  */\n\n  var bindSession = function bindSession(session) {\n    if (!sessions[session.id]) {\n      var cache = {};\n      sessions[session.id] = cache;\n      session.on('traffic:received', function (data) {\n        return data.close && data.close.forEach(function (handle) {\n          return delete cache[handle];\n        });\n      });\n      session.on('closed', function () {\n        return delete sessions[session.id];\n      });\n    }\n  };\n  /**\n  * Simple function that ensures the session events has been bound, and returns\n  * either an existing key-value cache or creates one for the specified handle.\n  * @private\n  * @param {Session} session The session that owns the handle.\n  * @param {Number} handle The object handle to retrieve the cache for.\n  * @returns {KeyValueCache} The cache instance.\n  */\n\n\n  var getHandleCache = function getHandleCache(session, handle) {\n    bindSession(session);\n    var cache = sessions[session.id];\n\n    if (!cache[handle]) {\n      cache[handle] = new KeyValueCache();\n    }\n\n    return cache[handle];\n  };\n  /**\n  * Function used to apply a list of patches and return the patched value.\n  * @private\n  * @param {Session} session The session.\n  * @param {Number} handle The object handle.\n  * @param {String} cacheId The cacheId.\n  * @param {Array} patches The patches.\n  * @returns {Object} Returns the patched value.\n  */\n\n\n  var patchValue = function patchValue(session, handle, cacheId, patches) {\n    var cache = getHandleCache(session, handle);\n    var entry = cache.get(cacheId);\n\n    if (typeof entry === 'undefined') {\n      entry = Array.isArray(patches[0].value) ? [] : {};\n    }\n\n    if (patches.length) {\n      if (patches[0].path === '/' && _typeof$3(patches[0].value) !== 'object') {\n        // 'plain' values on root path is not supported (no object reference),\n        // so we simply store the value directly:\n        entry = patches[0].value;\n      } else {\n        JSONPatch.apply(entry, patches);\n      }\n\n      cache.set(cacheId, entry);\n    }\n\n    return entry;\n  };\n  /**\n  * Process delta interceptor.\n  * @private\n  * @param {Session} session The session the intercept is being executed on.\n  * @param {Object} request The JSON-RPC request.\n  * @param {Object} response The response.\n  * @returns {Object} Returns the patched response\n  */\n\n\n  function deltaResponseInterceptor(session, request, response) {\n    var delta = response.delta,\n        result = response.result;\n\n    if (delta) {\n      // when delta is on the response data is expected to be an array of patches:\n      Object.keys(result).forEach(function (key) {\n        if (!Array.isArray(result[key])) {\n          throw createEnigmaError(errorCodes.EXPECTED_ARRAY_OF_PATCHES, 'Unexpected RPC response, expected array of patches');\n        }\n\n        result[key] = patchValue(session, request.handle, \"\".concat(request.method, \"-\").concat(key), result[key]);\n      }); // return a cloned response object to avoid patched object references:\n\n      return JSON.parse(JSON.stringify(response));\n    }\n\n    return response;\n  } // export object reference for testing purposes:\n\n  deltaResponseInterceptor.sessions = sessions;\n\n  /**\n  * Process error interceptor.\n  * @private\n  * @param {Session} session - The session the intercept is being executed on.\n  * @param {Object} request - The JSON-RPC request.\n  * @param {Object} response - The response.\n  * @returns {Object} - Returns the defined error for an error, else the response.\n  */\n  function errorResponseInterceptor(session, request, response) {\n    if (typeof response.error !== 'undefined') {\n      var data = response.error;\n      var error = new Error(data.message);\n      error.code = data.code;\n      error.parameter = data.parameter;\n      return session.config.Promise.reject(error);\n    }\n\n    return response;\n  }\n\n  var RETURN_KEY = 'qReturn';\n  /**\n  * Picks out the result \"out\" parameter based on the QIX method+schema, with\n  * some specific handling for some methods that breaks the predictable protocol.\n  * @private\n  * @param {Session} session - The session the intercept is being executed on.\n  * @param {Object} request - The JSON-RPC request.\n  * @param {Object} response - The response.\n  * @returns {Object} - Returns the result property on the response\n  */\n\n  function outParamResponseInterceptor(session, request, response) {\n    if (request.method === 'CreateSessionApp' || request.method === 'CreateSessionAppFromApp') {\n      // this method returns multiple out params that we need\n      // to normalize before processing the response further:\n      response[RETURN_KEY].qGenericId = response.qSessionAppId || response[RETURN_KEY].qGenericId;\n    } else if (request.method === 'GetInteract') {\n      // this method returns a qReturn value when it should only return\n      // meta.outKey:\n      delete response[RETURN_KEY];\n    }\n\n    if (hasOwnProperty.call(response, RETURN_KEY)) {\n      return response[RETURN_KEY];\n    }\n\n    if (request.outKey !== -1) {\n      return response[request.outKey];\n    }\n\n    return response;\n  }\n\n  /**\n  * Process result interceptor.\n  * @private\n  * @param {Session} session - The session the intercept is being executed on.\n  * @param {Object} request - The JSON-RPC request.\n  * @param {Object} response - The response.\n  * @returns {Object} - Returns the result property on the response\n  */\n  function resultResponseInterceptor(session, request, response) {\n    return response.result;\n  }\n\n  function _toConsumableArray$1(arr) { return _arrayWithoutHoles$1(arr) || _iterableToArray$1(arr) || _nonIterableSpread$1(); }\n\n  function _nonIterableSpread$1() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\n  function _iterableToArray$1(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\n  function _arrayWithoutHoles$1(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\n  function _classCallCheck$7(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties$6(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass$6(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$6(Constructor.prototype, protoProps); if (staticProps) _defineProperties$6(Constructor, staticProps); return Constructor; }\n  /**\n   * Interceptors is a concept similar to mixins, but run on a lower level. The interceptor concept\n   * can augment either the requests (i.e. before sent to QIX Engine), or the responses (i.e. after\n   * QIX Engine has sent a response). The interceptor promises runs in parallel to the regular\n   * promises used in enigma.js, which means that it can be really useful when you want to normalize\n   * behaviors in your application.\n   * @interface Interceptor\n   */\n\n  /**\n    * @class InterceptorRequest\n    * @implements {Interceptor}\n    */\n\n  /**\n   * @class InterceptorResponse\n   * @implements {Interceptor}\n   */\n\n  /**\n   * This method is invoked when a request is about to be sent to QIX Engine.\n   * @function InterceptorRequest#onFulfilled\n   * @param {Session} session The session executing the interceptor.\n   * @param {Object} request The JSON-RPC request that will be sent.\n   */\n\n  /**\n   * This method is invoked when a previous interceptor has rejected the\n   * promise, use this to handle for example errors before they are sent into mixins.\n   * @function InterceptorResponse#onRejected\n   * @param {Session} session The session executing the interceptor. You may use .retry() to retry\n   * sending it to QIX Engine.\n   * @param {Object} request The JSON-RPC request resulting in this error.\n   * @param {Object} error Whatever the previous interceptor is rejected with.\n   */\n\n  /**\n   * This method is invoked when a promise has been successfully resolved,\n   * use this to modify the result or reject the promise chain before it is sent\n   * to mixins.\n   * @function InterceptorResponse#onFulfilled\n   * @param {Session} session The session executing the interceptor.\n   * @param {Object} request The JSON-RPC request resulting in this response.\n   * @param {Object} result Whatever the previous interceptor is resolved with.\n   */\n\n  var Intercept =\n  /*#__PURE__*/\n  function () {\n    /**\n    * Create a new Intercept instance.\n    * @private\n    * @param {Object} options The configuration options for this class.\n    * @param {Promise<Object>} options.Promise The promise constructor to use.\n    * @param {ApiCache} options.apis The ApiCache instance to use.\n    * @param {Array<Object>} [options.request] The additional request interceptors to use.\n    * @param {Array<Object>} [options.response] The additional response interceptors to use.\n    */\n    function Intercept(options) {\n      _classCallCheck$7(this, Intercept);\n\n      Object.assign(this, options);\n      this.request = [{\n        onFulfilled: deltaRequestInterceptor\n      }].concat(_toConsumableArray$1(this.request || []));\n      this.response = [{\n        onFulfilled: errorResponseInterceptor\n      }, {\n        onFulfilled: deltaResponseInterceptor\n      }, {\n        onFulfilled: resultResponseInterceptor\n      }, {\n        onFulfilled: outParamResponseInterceptor\n      }].concat(_toConsumableArray$1(this.response || []), [{\n        onFulfilled: apiResponseInterceptor\n      }]);\n    }\n    /**\n    * Execute the request interceptor queue, each interceptor will get the result from\n    * the previous interceptor.\n    * @private\n    * @param {Session} session The session instance to execute against.\n    * @param {Promise<Object>} promise The promise to chain on to.\n    * @returns {Promise<Object>}\n    */\n\n\n    _createClass$6(Intercept, [{\n      key: \"executeRequests\",\n      value: function executeRequests(session, promise) {\n        var _this = this;\n\n        return this.request.reduce(function (interception, interceptor) {\n          var intercept = interceptor.onFulfilled && interceptor.onFulfilled.bind(_this, session);\n          return interception.then(intercept);\n        }, promise);\n      }\n      /**\n      * Execute the response interceptor queue, each interceptor will get the result from\n      * the previous interceptor.\n      * @private\n      * @param {Session} session The session instance to execute against.\n      * @param {Promise<Object>} promise The promise to chain on to.\n      * @param {Object} request The JSONRPC request object for the intercepted response.\n      * @returns {Promise<Object>}\n      */\n\n    }, {\n      key: \"executeResponses\",\n      value: function executeResponses(session, promise, request) {\n        var _this2 = this;\n\n        return this.response.reduce(function (interception, interceptor) {\n          return interception.then(interceptor.onFulfilled && interceptor.onFulfilled.bind(_this2, session, request), interceptor.onRejected && interceptor.onRejected.bind(_this2, session, request));\n        }, promise);\n      }\n    }]);\n\n    return Intercept;\n  }();\n\n  function _typeof$4(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof$4 = function _typeof(obj) { return typeof obj; }; } else { _typeof$4 = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof$4(obj); }\n\n  function _classCallCheck$8(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties$7(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass$7(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$7(Constructor.prototype, protoProps); if (staticProps) _defineProperties$7(Constructor, staticProps); return Constructor; }\n\n  function _possibleConstructorReturn$1(self, call) { if (call && (_typeof$4(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized$1(self); }\n\n  function _assertThisInitialized$1(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\n  function _get(target, property, receiver) { if (typeof Reflect !== \"undefined\" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }\n\n  function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf$1(object); if (object === null) break; } return object; }\n\n  function _getPrototypeOf$1(o) { _getPrototypeOf$1 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf$1(o); }\n\n  function _inherits$1(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf$1(subClass, superClass); }\n\n  function _setPrototypeOf$1(o, p) { _setPrototypeOf$1 = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf$1(o, p); }\n  /**\n  * API cache for instances of QIX types, e.g. GenericObject.\n  * @private\n  * @extends KeyValueCache\n  */\n\n  var ApiCache =\n  /*#__PURE__*/\n  function (_KeyValueCache) {\n    _inherits$1(ApiCache, _KeyValueCache);\n\n    function ApiCache() {\n      _classCallCheck$8(this, ApiCache);\n\n      return _possibleConstructorReturn$1(this, _getPrototypeOf$1(ApiCache).apply(this, arguments));\n    }\n\n    _createClass$7(ApiCache, [{\n      key: \"add\",\n\n      /**\n      * Adds an API.\n      * @private\n      * @function ApiCache#add\n      * @param {Number} handle - The handle for the API.\n      * @param {*} api - The API.\n      * @returns {{api: *}} The entry.\n      */\n      value: function add(handle, api) {\n        var _this = this;\n\n        var entry = {\n          api: api\n        };\n\n        _get(_getPrototypeOf$1(ApiCache.prototype), \"add\", this).call(this, handle.toString(), entry);\n\n        api.on('closed', function () {\n          return _this.remove(handle);\n        });\n        return entry;\n      }\n      /**\n      * Gets an API.\n      * @private\n      * @function ApiCache#getApi\n      * @param {Number} handle - The handle for the API.\n      * @returns {*} The API for the handle.\n      */\n\n    }, {\n      key: \"getApi\",\n      value: function getApi(handle) {\n        var entry = typeof handle !== 'undefined' ? this.get(handle.toString()) : undefined;\n        return entry && entry.api;\n      }\n      /**\n      * Gets a list of APIs.\n      * @private\n      * @function ApiCache#getApis\n      * @returns {Array} The list of entries including `handle` and `api` properties for each entry.\n      */\n\n    }, {\n      key: \"getApis\",\n      value: function getApis() {\n        return _get(_getPrototypeOf$1(ApiCache.prototype), \"getAll\", this).call(this).map(function (entry) {\n          return {\n            handle: entry.key,\n            api: entry.value.api\n          };\n        });\n      }\n      /**\n      * Gets a list of APIs with a given type.\n      * @private\n      * @function ApiCache#getApisByType\n      * @param {String} type - The type of APIs to get.\n      * @returns {Array} The list of entries including `handle` and `api` properties for each entry.\n      */\n\n    }, {\n      key: \"getApisByType\",\n      value: function getApisByType(type) {\n        return this.getApis().filter(function (entry) {\n          return entry.api.type === type;\n        });\n      }\n    }]);\n\n    return ApiCache;\n  }(KeyValueCache);\n\n  function _classCallCheck$9(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n  function _defineProperties$8(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n  function _createClass$8(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$8(Constructor.prototype, protoProps); if (staticProps) _defineProperties$8(Constructor, staticProps); return Constructor; }\n  /**\n   * The enigma.js configuration object.\n   * @interface Configuration\n   * @property {Object} schema Object containing the specification for the API to generate.\n   * Corresponds to a specific version of the QIX Engine API.\n   * @property {String} url String containing a proper websocker URL to QIX Engine.\n   * @property {Function} [createSocket] A function to use when instantiating the WebSocket,\n   * mandatory for Node.js.\n   * @property {Object} [Promise] ES6-compatible Promise library.\n   * @property {Boolean} [suspendOnClose=false] Set to true if the session should be suspended\n   * instead of closed when the websocket is closed.\n   * @property {Array<Mixin>} [mixins=[]] Mixins to extend/augment the QIX Engine API. Mixins\n   * are applied in the array order.\n   * @property {Array} [requestInterceptors=[]] Interceptors for augmenting requests before they\n   * are sent to QIX Engine. Interceptors are applied in the array order.\n   * @property {Array} [responseInterceptors=[]] Interceptors for augmenting responses before they\n   * are passed into mixins and end-users. Interceptors are applied in the array order.\n   * @property {Object} [protocol={}] An object containing additional JSON-RPC request parameters.\n   * @property {Boolean} [protocol.delta=true] Set to false to disable the use of the\n   * bandwidth-reducing delta protocol.\n   */\n\n  /**\n   * Mixin object to extend/augment the QIX Engine API\n   * @interface Mixin\n   * @property {String|Array<String>} types String or array of strings containing the API-types that\n   * will be mixed in.\n   * @property {Object} [extend] Object literal containing the methods that will be extended on the\n   * specified API.\n   * @property {Object} [override] Object literal containing the methods to override existing methods.\n   * @property {Function} [init] Init function that, if defined, will run when an API is instantiated.\n   * It runs with Promise and API object as parameters\n   */\n\n  /**\n   * The API for generated APIs depends on the QIX Engine schema you pass into your Configuration,\n   * and on what QIX struct the API has.\n   * @interface API\n   * @property {String} id Contains the unique identifier for this API.\n   * @property {String} type Contains the schema class name for this API.\n   * @property {String} genericType Corresponds to the qInfo.qType property on the generic object's\n   * properties object.\n   * @property {Session} session Contains a reference to the session that this API belongs to.\n   * @property {Number} handle Contains the handle QIX Engine assigned to the API. Used interally in\n   * enigma.js for caches and JSON-RPC requests.\n   */\n\n  /**\n   * Handle changes on the API. The changed event is triggered whenever enigma.js or QIX Engine has\n   * identified potential changes on the underlying properties or hypercubes and you should re-fetch\n   * your data.\n   * @event API#changed\n   * @type {Object}\n   */\n\n  /**\n   * Handle closed API. The closed event is triggered whenever QIX Engine considers an API closed.\n   * It usually means that it no longer exist in the QIX Engine document or session.\n   * @event API#closed\n   * @type {Object}\n   */\n\n  /**\n   * Handle JSON-RPC requests/responses for this API. Generally used in debugging purposes.\n   * traffic:* will handle all websocket messages, traffic:sent will handle outgoing messages\n   * and traffic:received will handle incoming messages.\n   * @event API#traffic\n   * @type {Object}\n   */\n\n  /**\n  * Qix service.\n  */\n\n  var Qix =\n  /*#__PURE__*/\n  function () {\n    function Qix() {\n      _classCallCheck$9(this, Qix);\n    }\n\n    _createClass$8(Qix, null, [{\n      key: \"getSession\",\n\n      /**\n      * Function used to get a session.\n      * @private\n      * @param {Configuration} config The configuration object for this session.\n      * @returns {Session} Returns a session instance.\n      */\n      value: function getSession(config) {\n        var createSocket = config.createSocket,\n            Promise = config.Promise,\n            requestInterceptors = config.requestInterceptors,\n            responseInterceptors = config.responseInterceptors,\n            url = config.url;\n        var apis = new ApiCache();\n        var intercept = new Intercept({\n          apis: apis,\n          Promise: Promise,\n          request: requestInterceptors,\n          response: responseInterceptors\n        });\n        var rpc = new RPC({\n          createSocket: createSocket,\n          Promise: Promise,\n          url: url\n        });\n        var suspendResume = new SuspendResume({\n          apis: apis,\n          Promise: Promise,\n          rpc: rpc\n        });\n        var session = new Session({\n          apis: apis,\n          config: config,\n          intercept: intercept,\n          rpc: rpc,\n          suspendResume: suspendResume\n        });\n        return session;\n      }\n      /**\n      * Function used to create a QIX session.\n      * @param {Configuration} config The configuration object for the QIX session.\n      * @returns {Session} Returns a new QIX session.\n      */\n\n    }, {\n      key: \"create\",\n      value: function create(config) {\n        Qix.configureDefaults(config);\n        config.mixins.forEach(function (mixin) {\n          config.definition.registerMixin(mixin);\n        });\n        return Qix.getSession(config);\n      }\n      /**\n      * Function used to configure defaults.\n      * @private\n      * @param {Configuration} config The configuration object for how to connect\n      *                               and retrieve end QIX APIs.\n      */\n\n    }, {\n      key: \"configureDefaults\",\n      value: function configureDefaults(config) {\n        if (!config) {\n          throw createEnigmaError(errorCodes.NO_CONFIG_SUPPLIED, 'You need to supply a configuration.');\n        } // eslint-disable-next-line no-restricted-globals\n\n\n        if (!config.Promise && typeof Promise === 'undefined') {\n          throw createEnigmaError(errorCodes.PROMISE_REQUIRED, 'Your environment has no Promise implementation. You must provide a Promise implementation in the config.');\n        }\n\n        if (typeof config.createSocket !== 'function' && typeof WebSocket === 'function') {\n          // eslint-disable-next-line no-undef\n          config.createSocket = function (url) {\n            return new WebSocket(url);\n          };\n        }\n\n        if (typeof config.suspendOnClose === 'undefined') {\n          config.suspendOnClose = false;\n        }\n\n        config.protocol = config.protocol || {};\n        config.protocol.delta = typeof config.protocol.delta !== 'undefined' ? config.protocol.delta : true; // eslint-disable-next-line no-restricted-globals\n\n        config.Promise = config.Promise || Promise;\n        config.mixins = config.mixins || [];\n        config.definition = config.definition || new Schema(config);\n      }\n    }]);\n\n    return Qix;\n  }();\n\n  return Qix;\n\n})));\n//# sourceMappingURL=enigma.js.map\n","/**\n * enigma.js v2.6.3\n * Copyright (c) 2019 QlikTech International AB\n * This library is licensed under MIT - See the LICENSE file for full details\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global = global || self, global.senseUtilities = factory());\n}(this, (function () { 'use strict';\n\n\tfunction createCommonjsModule(fn, module) {\n\t\treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n\t}\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\n\t// If obj.hasOwnProperty has been overridden, then calling\n\t// obj.hasOwnProperty(prop) will break.\n\t// See: https://github.com/joyent/node/issues/1707\n\tfunction hasOwnProperty(obj, prop) {\n\t  return Object.prototype.hasOwnProperty.call(obj, prop);\n\t}\n\n\tvar decode = function(qs, sep, eq, options) {\n\t  sep = sep || '&';\n\t  eq = eq || '=';\n\t  var obj = {};\n\n\t  if (typeof qs !== 'string' || qs.length === 0) {\n\t    return obj;\n\t  }\n\n\t  var regexp = /\\+/g;\n\t  qs = qs.split(sep);\n\n\t  var maxKeys = 1000;\n\t  if (options && typeof options.maxKeys === 'number') {\n\t    maxKeys = options.maxKeys;\n\t  }\n\n\t  var len = qs.length;\n\t  // maxKeys <= 0 means that we should not limit keys count\n\t  if (maxKeys > 0 && len > maxKeys) {\n\t    len = maxKeys;\n\t  }\n\n\t  for (var i = 0; i < len; ++i) {\n\t    var x = qs[i].replace(regexp, '%20'),\n\t        idx = x.indexOf(eq),\n\t        kstr, vstr, k, v;\n\n\t    if (idx >= 0) {\n\t      kstr = x.substr(0, idx);\n\t      vstr = x.substr(idx + 1);\n\t    } else {\n\t      kstr = x;\n\t      vstr = '';\n\t    }\n\n\t    k = decodeURIComponent(kstr);\n\t    v = decodeURIComponent(vstr);\n\n\t    if (!hasOwnProperty(obj, k)) {\n\t      obj[k] = v;\n\t    } else if (Array.isArray(obj[k])) {\n\t      obj[k].push(v);\n\t    } else {\n\t      obj[k] = [obj[k], v];\n\t    }\n\t  }\n\n\t  return obj;\n\t};\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\n\tvar stringifyPrimitive = function(v) {\n\t  switch (typeof v) {\n\t    case 'string':\n\t      return v;\n\n\t    case 'boolean':\n\t      return v ? 'true' : 'false';\n\n\t    case 'number':\n\t      return isFinite(v) ? v : '';\n\n\t    default:\n\t      return '';\n\t  }\n\t};\n\n\tvar encode = function(obj, sep, eq, name) {\n\t  sep = sep || '&';\n\t  eq = eq || '=';\n\t  if (obj === null) {\n\t    obj = undefined;\n\t  }\n\n\t  if (typeof obj === 'object') {\n\t    return Object.keys(obj).map(function(k) {\n\t      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n\t      if (Array.isArray(obj[k])) {\n\t        return obj[k].map(function(v) {\n\t          return ks + encodeURIComponent(stringifyPrimitive(v));\n\t        }).join(sep);\n\t      } else {\n\t        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n\t      }\n\t    }).join(sep);\n\n\t  }\n\n\t  if (!name) return '';\n\t  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n\t         encodeURIComponent(stringifyPrimitive(obj));\n\t};\n\n\tvar querystring = createCommonjsModule(function (module, exports) {\n\n\texports.decode = exports.parse = decode;\n\texports.encode = exports.stringify = encode;\n\t});\n\tvar querystring_1 = querystring.decode;\n\tvar querystring_2 = querystring.parse;\n\tvar querystring_3 = querystring.encode;\n\tvar querystring_4 = querystring.stringify;\n\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n\tfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\n\tfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\t/**\n\t* The Qlik Sense configuration object.\n\t* @typedef {Object} SenseConfiguration\n\t* @property {String} [appId] The app id. If omitted, only the global object is returned.\n\t*                            Otherwise both global and app object are returned.\n\t* @property {Boolean} [noData=false] Whether to open the app without data.\n\t* @property {Boolean} [secure=true] Set to false if an unsecure WebSocket should be used.\n\t* @property {String} [host] Host address.\n\t* @property {Number} [port] Port to connect to.\n\t* @property {String} [prefix=\"/\"] The absolute base path to use when connecting.\n\t*                             Used for proxy prefixes.\n\t* @property {String} [subpath=\"\"] The subpath.\n\t* @property {String} [route=\"\"] Used to instruct Proxy to route to the correct receiver.\n\t* @property {String} [identity=\"\"] Identity to use.\n\t* @property {Object} [urlParams={}] Used to add parameters to the WebSocket URL.\n\t* @property {Number} [ttl] A value in seconds that QIX Engine should keep the session\n\t*                             alive after socket disconnect (only works if QIX Engine supports it).\n\t*/\n\n\tfunction replaceLeadingAndTrailingSlashes(str) {\n\t  return str.replace(/(^[/]+)|([/]+$)/g, '');\n\t}\n\n\tvar SenseUtilities =\n\t/*#__PURE__*/\n\tfunction () {\n\t  function SenseUtilities() {\n\t    _classCallCheck(this, SenseUtilities);\n\t  }\n\n\t  _createClass(SenseUtilities, null, [{\n\t    key: \"configureDefaults\",\n\n\t    /**\n\t    * Ensures that the configuration has defaults set.\n\t    *\n\t    * @private\n\t    * @param {SenseConfiguration} senseConfig The configuration to ensure defaults on.\n\t    */\n\t    value: function configureDefaults(senseConfig) {\n\t      if (!senseConfig.host) {\n\t        senseConfig.host = 'localhost';\n\t      }\n\n\t      if (typeof senseConfig.secure === 'undefined') {\n\t        senseConfig.secure = true;\n\t      }\n\n\t      if (!senseConfig.appId && !senseConfig.route) {\n\t        senseConfig.route = 'app/engineData';\n\t      }\n\n\t      if (typeof senseConfig.noData === 'undefined') {\n\t        senseConfig.noData = false;\n\t      }\n\t    }\n\t    /**\n\t    * Function used to build an URL.\n\t    * @param {SenseConfiguration} urlConfig - The URL configuration object.\n\t    * @returns {String} Returns the websocket URL.\n\t    */\n\n\t  }, {\n\t    key: \"buildUrl\",\n\t    value: function buildUrl(urlConfig) {\n\t      SenseUtilities.configureDefaults(urlConfig);\n\t      var secure = urlConfig.secure,\n\t          host = urlConfig.host,\n\t          port = urlConfig.port,\n\t          prefix = urlConfig.prefix,\n\t          subpath = urlConfig.subpath,\n\t          route = urlConfig.route,\n\t          identity = urlConfig.identity,\n\t          urlParams = urlConfig.urlParams,\n\t          ttl = urlConfig.ttl,\n\t          appId = urlConfig.appId;\n\t      var url = '';\n\t      url += \"\".concat(secure ? 'wss' : 'ws', \"://\");\n\t      url += host || 'localhost';\n\n\t      if (port) {\n\t        url += \":\".concat(port);\n\t      }\n\n\t      if (prefix) {\n\t        url += \"/\".concat(replaceLeadingAndTrailingSlashes(prefix));\n\t      }\n\n\t      if (subpath) {\n\t        url += \"/\".concat(replaceLeadingAndTrailingSlashes(subpath));\n\t      }\n\n\t      if (route) {\n\t        url += \"/\".concat(replaceLeadingAndTrailingSlashes(route));\n\t      } else if (appId) {\n\t        url += \"/app/\".concat(encodeURIComponent(appId));\n\t      }\n\n\t      if (identity) {\n\t        url += \"/identity/\".concat(encodeURIComponent(identity));\n\t      }\n\n\t      if (ttl) {\n\t        url += \"/ttl/\".concat(ttl);\n\t      }\n\n\t      if (urlParams) {\n\t        url += \"?\".concat(querystring.stringify(urlParams));\n\t      }\n\n\t      return url;\n\t    }\n\t  }]);\n\n\t  return SenseUtilities;\n\t}();\n\n\treturn SenseUtilities;\n\n})));\n//# sourceMappingURL=sense-utilities.js.map\n","'use strict';\n\nconst WebSocket = require('./lib/websocket');\n\nWebSocket.createWebSocketStream = require('./lib/stream');\nWebSocket.Server = require('./lib/websocket-server');\nWebSocket.Receiver = require('./lib/receiver');\nWebSocket.Sender = require('./lib/sender');\n\nmodule.exports = WebSocket;\n","'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) return target.slice(0, offset);\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  // Required until https://github.com/nodejs/node/issues/9006 is resolved.\n  const length = buffer.length;\n  for (let i = 0; i < length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.byteLength === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = Buffer.from(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = viewToBuffer(data);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\n/**\n * Converts an `ArrayBuffer` view into a buffer.\n *\n * @param {(DataView|TypedArray)} view The view to convert\n * @return {Buffer} Converted view\n * @private\n */\nfunction viewToBuffer(view) {\n  const buf = Buffer.from(view.buffer);\n\n  if (view.byteLength !== view.buffer.byteLength) {\n    return buf.slice(view.byteOffset, view.byteOffset + view.byteLength);\n  }\n\n  return buf;\n}\n\ntry {\n  const bufferUtil = require('bufferutil');\n  const bu = bufferUtil.BufferUtil || bufferUtil;\n\n  module.exports = {\n    concat,\n    mask(source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bu.mask(source, mask, output, offset, length);\n    },\n    toArrayBuffer,\n    toBuffer,\n    unmask(buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bu.unmask(buffer, mask);\n    }\n  };\n} catch (e) /* istanbul ignore next */ {\n  module.exports = {\n    concat,\n    mask: _mask,\n    toArrayBuffer,\n    toBuffer,\n    unmask: _unmask\n  };\n}\n","'use strict';\n\nmodule.exports = {\n  BINARY_TYPES: ['nodebuffer', 'arraybuffer', 'fragments'],\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  EMPTY_BUFFER: Buffer.alloc(0),\n  NOOP: () => {}\n};\n","'use strict';\n\n/**\n * Class representing an event.\n *\n * @private\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} target A reference to the target to which the event was dispatched\n   */\n  constructor(type, target) {\n    this.target = target;\n    this.type = type;\n  }\n}\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n * @private\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The received data\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor(data, target) {\n    super('message', target);\n\n    this.data = data;\n  }\n}\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n * @private\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {Number} code The status code explaining why the connection is being closed\n   * @param {String} reason A human-readable string explaining why the connection is closing\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor(code, reason, target) {\n    super('close', target);\n\n    this.wasClean = target._closeFrameReceived && target._closeFrameSent;\n    this.reason = reason;\n    this.code = code;\n  }\n}\n\n/**\n * Class representing an open event.\n *\n * @extends Event\n * @private\n */\nclass OpenEvent extends Event {\n  /**\n   * Create a new `OpenEvent`.\n   *\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor(target) {\n    super('open', target);\n  }\n}\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n * @private\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {Object} error The error that generated this event\n   * @param {WebSocket} target A reference to the target to which the event was dispatched\n   */\n  constructor(error, target) {\n    super('error', target);\n\n    this.message = error.message;\n    this.error = error;\n  }\n}\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} method A string representing the event type to listen for\n   * @param {Function} listener The listener to add\n   * @public\n   */\n  addEventListener(method, listener) {\n    if (typeof listener !== 'function') return;\n\n    function onMessage(data) {\n      listener.call(this, new MessageEvent(data, this));\n    }\n\n    function onClose(code, message) {\n      listener.call(this, new CloseEvent(code, message, this));\n    }\n\n    function onError(error) {\n      listener.call(this, new ErrorEvent(error, this));\n    }\n\n    function onOpen() {\n      listener.call(this, new OpenEvent(this));\n    }\n\n    if (method === 'message') {\n      onMessage._listener = listener;\n      this.on(method, onMessage);\n    } else if (method === 'close') {\n      onClose._listener = listener;\n      this.on(method, onClose);\n    } else if (method === 'error') {\n      onError._listener = listener;\n      this.on(method, onError);\n    } else if (method === 'open') {\n      onOpen._listener = listener;\n      this.on(method, onOpen);\n    } else {\n      this.on(method, listener);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} method A string representing the event type to remove\n   * @param {Function} listener The listener to remove\n   * @public\n   */\n  removeEventListener(method, listener) {\n    const listeners = this.listeners(method);\n\n    for (let i = 0; i < listeners.length; i++) {\n      if (listeners[i] === listener || listeners[i]._listener === listener) {\n        this.removeListener(method, listeners[i]);\n      }\n    }\n  }\n};\n\nmodule.exports = EventTarget;\n","'use strict';\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n\n  if (header === undefined || header === '') return offers;\n\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 /* ' ' */ || code === 0x09 /* '\\t' */) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n","'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} concurrency The maximum number of jobs allowed to run\n   *     concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n","'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode, NOOP } = require('./constants');\n\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Boolean} options.serverNoContextTakeover Request/accept disabling\n   *     of server context takeover\n   * @param {Boolean} options.clientNoContextTakeover Advertise/acknowledge\n   *     disabling of client context takeover\n   * @param {(Boolean|Number)} options.serverMaxWindowBits Request/confirm the\n   *     use of a custom server window size\n   * @param {(Boolean|Number)} options.clientMaxWindowBits Advertise support\n   *     for, or request, a custom client window size\n   * @param {Object} options.zlibDeflateOptions Options to pass to zlib on deflate\n   * @param {Object} options.zlibInflateOptions Options to pass to zlib on inflate\n   * @param {Number} options.threshold Size (in bytes) below which messages\n   *     should not be compressed\n   * @param {Number} options.concurrencyLimit The number of concurrent calls to\n   *     zlib\n   * @param {Boolean} isServer Create the instance in either server or client\n   *     mode\n   * @param {Number} maxPayload The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      if (this._deflate[kCallback]) {\n        this._deflate[kCallback]();\n      }\n\n      this._deflate.close();\n      this._deflate = null;\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        if (err || result) {\n          callback(err, result);\n        }\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {Buffer} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      //\n      // An `'error'` event is emitted, only on Node.js < 10.0.0, if the\n      // `zlib.DeflateRaw` instance is closed while data is being processed.\n      // This can happen if `PerMessageDeflate#cleanup()` is called at the wrong\n      // time due to an abnormal WebSocket closure.\n      //\n      this._deflate.on('error', NOOP);\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // This `if` statement is only needed for Node.js < 10.0.0 because as of\n        // commit https://github.com/nodejs/node/commit/5e3f5164, the flush\n        // callback is no longer called if the deflate stream is closed while\n        // data is being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) data = data.slice(0, data.length - 4);\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.close();\n        this._deflate = null;\n      } else {\n        this._deflate[kTotalLength] = 0;\n        this._deflate[kBuffers] = [];\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n","'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends stream.Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {String} binaryType The type for binary data\n   * @param {Object} extensions An object containing the negotiated extensions\n   * @param {Number} maxPayload The maximum allowed message length\n   */\n  constructor(binaryType, extensions, maxPayload) {\n    super();\n\n    this._binaryType = binaryType || BINARY_TYPES[0];\n    this[kWebSocket] = undefined;\n    this._extensions = extensions || {};\n    this._maxPayload = maxPayload | 0;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._state = GET_INFO;\n    this._loop = false;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = buf.slice(n);\n      return buf.slice(0, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = buf.slice(n);\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    let err;\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          err = this.getInfo();\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          err = this.getPayloadLength16();\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          err = this.getPayloadLength64();\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          err = this.getData(cb);\n          break;\n        default:\n          // `INFLATING`\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    cb(err);\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getInfo() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      this._loop = false;\n      return error(RangeError, 'RSV2 and RSV3 must be clear', true, 1002);\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      this._loop = false;\n      return error(RangeError, 'RSV1 must be clear', true, 1002);\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        this._loop = false;\n        return error(RangeError, 'RSV1 must be clear', true, 1002);\n      }\n\n      if (!this._fragmented) {\n        this._loop = false;\n        return error(RangeError, 'invalid opcode 0', true, 1002);\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        this._loop = false;\n        return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002);\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        this._loop = false;\n        return error(RangeError, 'FIN must be set', true, 1002);\n      }\n\n      if (compressed) {\n        this._loop = false;\n        return error(RangeError, 'RSV1 must be clear', true, 1002);\n      }\n\n      if (this._payloadLength > 0x7d) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002\n        );\n      }\n    } else {\n      this._loop = false;\n      return error(RangeError, `invalid opcode ${this._opcode}`, true, 1002);\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength16() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength64() {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009\n      );\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    return this.haveLength();\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  haveLength() {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        this._loop = false;\n        return error(RangeError, 'Max payload size exceeded', false, 1009);\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n      if (this._masked) unmask(data, this._mask);\n    }\n\n    if (this._opcode > 0x07) return this.controlMessage(data);\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its lenght is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    return this.dataMessage();\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          return cb(\n            error(RangeError, 'Max payload size exceeded', false, 1009)\n          );\n        }\n\n        this._fragments.push(buf);\n      }\n\n      const er = this.dataMessage();\n      if (er) return cb(er);\n\n      this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */\n  dataMessage() {\n    if (this._fin) {\n      const messageLength = this._messageLength;\n      const fragments = this._fragments;\n\n      this._totalPayloadLength = 0;\n      this._messageLength = 0;\n      this._fragmented = 0;\n      this._fragments = [];\n\n      if (this._opcode === 2) {\n        let data;\n\n        if (this._binaryType === 'nodebuffer') {\n          data = concat(fragments, messageLength);\n        } else if (this._binaryType === 'arraybuffer') {\n          data = toArrayBuffer(concat(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n\n        this.emit('message', data);\n      } else {\n        const buf = concat(fragments, messageLength);\n\n        if (!isValidUTF8(buf)) {\n          this._loop = false;\n          return error(Error, 'invalid UTF-8 sequence', true, 1007);\n        }\n\n        this.emit('message', buf.toString());\n      }\n    }\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data) {\n    if (this._opcode === 0x08) {\n      this._loop = false;\n\n      if (data.length === 0) {\n        this.emit('conclude', 1005, '');\n        this.end();\n      } else if (data.length === 1) {\n        return error(RangeError, 'invalid payload length 1', true, 1002);\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          return error(RangeError, `invalid status code ${code}`, true, 1002);\n        }\n\n        const buf = data.slice(2);\n\n        if (!isValidUTF8(buf)) {\n          return error(Error, 'invalid UTF-8 sequence', true, 1007);\n        }\n\n        this.emit('conclude', code, buf.toString());\n        this.end();\n      }\n    } else if (this._opcode === 0x09) {\n      this.emit('ping', data);\n    } else {\n      this.emit('pong', data);\n    }\n\n    this._state = GET_INFO;\n  }\n}\n\nmodule.exports = Receiver;\n\n/**\n * Builds an error object.\n *\n * @param {(Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @return {(Error|RangeError)} The error\n * @private\n */\nfunction error(ErrorCtor, message, prefix, statusCode) {\n  const err = new ErrorCtor(\n    prefix ? `Invalid WebSocket frame: ${message}` : message\n  );\n\n  Error.captureStackTrace(err, error);\n  err[kStatusCode] = statusCode;\n  return err;\n}\n","'use strict';\n\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER } = require('./constants');\nconst { isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst mask = Buffer.alloc(4);\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {net.Socket} socket The connection socket\n   * @param {Object} extensions An object containing the negotiated extensions\n   */\n  constructor(socket, extensions) {\n    this._extensions = extensions || {};\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._deflating = false;\n    this._queue = [];\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {Buffer} data The data to frame\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} options.readOnly Specifies whether `data` can be modified\n   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit\n   * @return {Buffer[]} The framed data as a list of `Buffer` instances\n   * @public\n   */\n  static frame(data, options) {\n    const merge = options.mask && options.readOnly;\n    let offset = options.mask ? 6 : 2;\n    let payloadLength = data.length;\n\n    if (data.length >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (data.length > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? data.length + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(data.length, 2);\n    } else if (payloadLength === 127) {\n      target.writeUInt32BE(0, 2);\n      target.writeUInt32BE(data.length, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    randomFillSync(mask, 0, 4);\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, data.length);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, data.length);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {(Number|undefined)} code The status code component of the body\n   * @param {String} data The message component of the body\n   * @param {Boolean} mask Specifies whether or not to mask the message\n   * @param {Function} cb Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || data === '') {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      buf = Buffer.allocUnsafe(2 + Buffer.byteLength(data));\n      buf.writeUInt16BE(code, 0);\n      buf.write(data, 2);\n    }\n\n    if (this._deflating) {\n      this.enqueue([this.doClose, buf, mask, cb]);\n    } else {\n      this.doClose(buf, mask, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a close message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @private\n   */\n  doClose(data, mask, cb) {\n    this.sendFrame(\n      Sender.frame(data, {\n        fin: true,\n        rsv1: false,\n        opcode: 0x08,\n        mask,\n        readOnly: false\n      }),\n      cb\n    );\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    const buf = toBuffer(data);\n\n    if (this._deflating) {\n      this.enqueue([this.doPing, buf, mask, toBuffer.readOnly, cb]);\n    } else {\n      this.doPing(buf, mask, toBuffer.readOnly, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a ping message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Boolean} readOnly Specifies whether `data` can be modified\n   * @param {Function} cb Callback\n   * @private\n   */\n  doPing(data, mask, readOnly, cb) {\n    this.sendFrame(\n      Sender.frame(data, {\n        fin: true,\n        rsv1: false,\n        opcode: 0x09,\n        mask,\n        readOnly\n      }),\n      cb\n    );\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    const buf = toBuffer(data);\n\n    if (this._deflating) {\n      this.enqueue([this.doPong, buf, mask, toBuffer.readOnly, cb]);\n    } else {\n      this.doPong(buf, mask, toBuffer.readOnly, cb);\n    }\n  }\n\n  /**\n   * Frames and sends a pong message.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} mask Specifies whether or not to mask `data`\n   * @param {Boolean} readOnly Specifies whether `data` can be modified\n   * @param {Function} cb Callback\n   * @private\n   */\n  doPong(data, mask, readOnly, cb) {\n    this.sendFrame(\n      Sender.frame(data, {\n        fin: true,\n        rsv1: false,\n        opcode: 0x0a,\n        mask,\n        readOnly\n      }),\n      cb\n    );\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} options.compress Specifies whether or not to compress `data`\n   * @param {Boolean} options.binary Specifies whether `data` is binary or text\n   * @param {Boolean} options.fin Specifies whether the fragment is the last one\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const buf = toBuffer(data);\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (rsv1 && perMessageDeflate) {\n        rsv1 = buf.length >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    if (perMessageDeflate) {\n      const opts = {\n        fin: options.fin,\n        rsv1,\n        opcode,\n        mask: options.mask,\n        readOnly: toBuffer.readOnly\n      };\n\n      if (this._deflating) {\n        this.enqueue([this.dispatch, buf, this._compress, opts, cb]);\n      } else {\n        this.dispatch(buf, this._compress, opts, cb);\n      }\n    } else {\n      this.sendFrame(\n        Sender.frame(buf, {\n          fin: options.fin,\n          rsv1: false,\n          opcode,\n          mask: options.mask,\n          readOnly: toBuffer.readOnly\n        }),\n        cb\n      );\n    }\n  }\n\n  /**\n   * Dispatches a data message.\n   *\n   * @param {Buffer} data The message to send\n   * @param {Boolean} compress Specifies whether or not to compress `data`\n   * @param {Object} options Options object\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} options.readOnly Specifies whether `data` can be modified\n   * @param {Boolean} options.fin Specifies whether or not to set the FIN bit\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Boolean} options.rsv1 Specifies whether or not to set the RSV1 bit\n   * @param {Function} cb Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._deflating = true;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      this._deflating = false;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (!this._deflating && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[1].length;\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[1].length;\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} cb Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n","'use strict';\n\nconst { Duplex } = require('stream');\n\n/**\n * Emits the `'close'` event on a stream.\n *\n * @param {stream.Duplex} The stream.\n * @private\n */\nfunction emitClose(stream) {\n  stream.emit('close');\n}\n\n/**\n * The listener of the `'end'` event.\n *\n * @private\n */\nfunction duplexOnEnd() {\n  if (!this.destroyed && this._writableState.finished) {\n    this.destroy();\n  }\n}\n\n/**\n * The listener of the `'error'` event.\n *\n * @private\n */\nfunction duplexOnError(err) {\n  this.removeListener('error', duplexOnError);\n  this.destroy();\n  if (this.listenerCount('error') === 0) {\n    // Do not suppress the throwing behavior.\n    this.emit('error', err);\n  }\n}\n\n/**\n * Wraps a `WebSocket` in a duplex stream.\n *\n * @param {WebSocket} ws The `WebSocket` to wrap\n * @param {Object} options The options for the `Duplex` constructor\n * @return {stream.Duplex} The duplex stream\n * @public\n */\nfunction createWebSocketStream(ws, options) {\n  let resumeOnReceiverDrain = true;\n\n  function receiverOnDrain() {\n    if (resumeOnReceiverDrain) ws._socket.resume();\n  }\n\n  if (ws.readyState === ws.CONNECTING) {\n    ws.once('open', function open() {\n      ws._receiver.removeAllListeners('drain');\n      ws._receiver.on('drain', receiverOnDrain);\n    });\n  } else {\n    ws._receiver.removeAllListeners('drain');\n    ws._receiver.on('drain', receiverOnDrain);\n  }\n\n  const duplex = new Duplex({\n    ...options,\n    autoDestroy: false,\n    emitClose: false,\n    objectMode: false,\n    writableObjectMode: false\n  });\n\n  ws.on('message', function message(msg) {\n    if (!duplex.push(msg)) {\n      resumeOnReceiverDrain = false;\n      ws._socket.pause();\n    }\n  });\n\n  ws.once('error', function error(err) {\n    duplex.destroy(err);\n  });\n\n  ws.once('close', function close() {\n    if (duplex.destroyed) return;\n\n    duplex.push(null);\n  });\n\n  duplex._destroy = function(err, callback) {\n    if (ws.readyState === ws.CLOSED) {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n      return;\n    }\n\n    ws.once('close', function close() {\n      callback(err);\n      process.nextTick(emitClose, duplex);\n    });\n    ws.terminate();\n  };\n\n  duplex._final = function(callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._final(callback);\n      });\n      return;\n    }\n\n    if (ws._socket._writableState.finished) {\n      if (duplex._readableState.endEmitted) duplex.destroy();\n      callback();\n    } else {\n      ws._socket.once('finish', function finish() {\n        // `duplex` is not destroyed here because the `'end'` event will be\n        // emitted on `duplex` after this `'finish'` event. The EOF signaling\n        // `null` chunk is, in fact, pushed when the WebSocket emits `'close'`.\n        callback();\n      });\n      ws.close();\n    }\n  };\n\n  duplex._read = function() {\n    if (ws.readyState === ws.OPEN && !resumeOnReceiverDrain) {\n      resumeOnReceiverDrain = true;\n      if (!ws._receiver._writableState.needDrain) ws._socket.resume();\n    }\n  };\n\n  duplex._write = function(chunk, encoding, callback) {\n    if (ws.readyState === ws.CONNECTING) {\n      ws.once('open', function open() {\n        duplex._write(chunk, encoding, callback);\n      });\n      return;\n    }\n\n    ws.send(chunk, callback);\n  };\n\n  duplex.on('end', duplexOnEnd);\n  duplex.on('error', duplexOnError);\n  return duplex;\n}\n\nmodule.exports = createWebSocketStream;\n","'use strict';\n\ntry {\n  const isValidUTF8 = require('utf-8-validate');\n\n  exports.isValidUTF8 =\n    typeof isValidUTF8 === 'object'\n      ? isValidUTF8.Validation.isValidUTF8 // utf-8-validate@<3.0.0\n      : isValidUTF8;\n} catch (e) /* istanbul ignore next */ {\n  exports.isValidUTF8 = () => true;\n}\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nexports.isValidStatusCode = (code) => {\n  return (\n    (code >= 1000 &&\n      code <= 1013 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n};\n","'use strict';\n\nconst EventEmitter = require('events');\nconst { createHash } = require('crypto');\nconst { createServer, STATUS_CODES } = require('http');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst WebSocket = require('./websocket');\nconst { format, parse } = require('./extension');\nconst { GUID } = require('./constants');\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\nconst kUsedByWebSocketServer = Symbol('kUsedByWebSocketServer');\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Number} options.backlog The maximum length of the queue of pending\n   *     connections\n   * @param {Boolean} options.clientTracking Specifies whether or not to track\n   *     clients\n   * @param {Function} options.handleProtocols A hook to handle protocols\n   * @param {String} options.host The hostname where to bind the server\n   * @param {Number} options.maxPayload The maximum allowed message size\n   * @param {Boolean} options.noServer Enable no server mode\n   * @param {String} options.path Accept only connections matching this path\n   * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable\n   *     permessage-deflate\n   * @param {Number} options.port The port where to bind the server\n   * @param {http.Server} options.server A pre-created HTTP/S server to use\n   * @param {Function} options.verifyClient A hook to reject connections\n   * @param {Function} callback A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      maxPayload: 100 * 1024 * 1024,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      ...options\n    };\n\n    if (options.port == null && !options.server && !options.noServer) {\n      throw new TypeError(\n        'One of the \"port\", \"server\", or \"noServer\" options must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = createServer((req, res) => {\n        const body = STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      if (options.server[kUsedByWebSocketServer]) {\n        throw new Error(\n          'The HTTP/S server is already being used by another WebSocket server'\n        );\n      }\n\n      options.server[kUsedByWebSocketServer] = true;\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, (ws) => {\n            this.emit('connection', ws, req);\n          });\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) this.clients = new Set();\n    this.options = options;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Close the server.\n   *\n   * @param {Function} cb Callback\n   * @public\n   */\n  close(cb) {\n    if (cb) this.once('close', cb);\n\n    //\n    // Terminate all associated clients.\n    //\n    if (this.clients) {\n      for (const client of this.clients) client.terminate();\n    }\n\n    const server = this._server;\n\n    if (server) {\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // Close the http server if it was internally created.\n      //\n      if (this.options.port != null) {\n        server.close(() => this.emit('close'));\n        return;\n      }\n\n      delete server[kUsedByWebSocketServer];\n    }\n\n    process.nextTick(emitClose, this);\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {net.Socket} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key =\n      req.headers['sec-websocket-key'] !== undefined\n        ? req.headers['sec-websocket-key'].trim()\n        : false;\n    const version = +req.headers['sec-websocket-version'];\n    const extensions = {};\n\n    if (\n      req.method !== 'GET' ||\n      req.headers.upgrade.toLowerCase() !== 'websocket' ||\n      !key ||\n      !keyRegex.test(key) ||\n      (version !== 8 && version !== 13) ||\n      !this.shouldHandle(req)\n    ) {\n      return abortHandshake(socket, 400);\n    }\n\n    if (this.options.perMessageDeflate) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = parse(req.headers['sec-websocket-extensions']);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        return abortHandshake(socket, 400);\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.connection.authorized || req.connection.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(key, extensions, req, socket, head, cb);\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(key, extensions, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Object} extensions The accepted extensions\n   * @param {http.IncomingMessage} req The request object\n   * @param {net.Socket} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @private\n   */\n  completeUpgrade(key, extensions, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new WebSocket(null);\n    let protocol = req.headers['sec-websocket-protocol'];\n\n    if (protocol) {\n      protocol = protocol.trim().split(/ *, */);\n\n      //\n      // Optionally call external protocol selection handler.\n      //\n      if (this.options.handleProtocols) {\n        protocol = this.options.handleProtocols(protocol, req);\n      } else {\n        protocol = protocol[0];\n      }\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws.protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, this.options.maxPayload);\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => this.clients.delete(ws));\n    }\n\n    cb(ws);\n  }\n}\n\nmodule.exports = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server.emit('close');\n}\n\n/**\n * Handle premature socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {net.Socket} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  if (socket.writable) {\n    message = message || STATUS_CODES[code];\n    headers = {\n      Connection: 'close',\n      'Content-type': 'text/html',\n      'Content-Length': Buffer.byteLength(message),\n      ...headers\n    };\n\n    socket.write(\n      `HTTP/1.1 ${code} ${STATUS_CODES[code]}\\r\\n` +\n        Object.keys(headers)\n          .map((h) => `${h}: ${headers[h]}`)\n          .join('\\r\\n') +\n        '\\r\\n\\r\\n' +\n        message\n    );\n  }\n\n  socket.removeListener('error', socketOnError);\n  socket.destroy();\n}\n","'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst { addEventListener, removeEventListener } = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst protocolVersions = [8, 13];\nconst closeTimeout = 30 * 1000;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|url.URL)} address The URL to which to connect\n   * @param {(String|String[])} protocols The subprotocols\n   * @param {Object} options Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this.readyState = WebSocket.CONNECTING;\n    this.protocol = '';\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = '';\n    this._closeTimer = null;\n    this._closeCode = 1006;\n    this._extensions = {};\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (Array.isArray(protocols)) {\n        protocols = protocols.join(', ');\n      } else if (typeof protocols === 'object' && protocols !== null) {\n        options = protocols;\n        protocols = undefined;\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._isServer = true;\n    }\n  }\n\n  get CONNECTING() {\n    return WebSocket.CONNECTING;\n  }\n  get CLOSING() {\n    return WebSocket.CLOSING;\n  }\n  get CLOSED() {\n    return WebSocket.CLOSED;\n  }\n  get OPEN() {\n    return WebSocket.OPEN;\n  }\n\n  /**\n   * This deviates from the WHATWG interface since ws doesn't support the\n   * required default \"blob\" type (instead we define a custom \"nodebuffer\"\n   * type).\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    //\n    // `socket.bufferSize` is `undefined` if the socket is closed.\n    //\n    return (this._socket.bufferSize || 0) + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {net.Socket} socket The network socket between the server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Number} maxPayload The maximum allowed message size\n   * @private\n   */\n  setSocket(socket, head, maxPayload) {\n    const receiver = new Receiver(\n      this._binaryType,\n      this._extensions,\n      maxPayload\n    );\n\n    this._sender = new Sender(socket, this._extensions);\n    this._receiver = receiver;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    socket.setTimeout(0);\n    socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this.readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    this.readyState = WebSocket.CLOSED;\n\n    if (!this._socket) {\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} code Status code explaining why the connection is closing\n   * @param {String} data A string explaining why the connection is closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (this._closeFrameSent && this._closeFrameReceived) this._socket.end();\n      return;\n    }\n\n    this.readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n      if (this._closeFrameReceived) this._socket.end();\n    });\n\n    //\n    // Specify a timeout for the closing handshake to complete.\n    //\n    this._closeTimer = setTimeout(\n      this._socket.destroy.bind(this._socket),\n      closeTimeout\n    );\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} data The data to send\n   * @param {Boolean} mask Indicates whether or not to mask `data`\n   * @param {Function} cb Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} data The data to send\n   * @param {Boolean} mask Indicates whether or not to mask `data`\n   * @param {Function} cb Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} options.compress Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} options.binary Specifies whether `data` is binary or text\n   * @param {Boolean} options.fin Specifies whether the fragment is the last one\n   * @param {Boolean} options.mask Specifies whether or not to mask `data`\n   * @param {Function} cb Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this._socket) {\n      this.readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\nreadyStates.forEach((readyState, i) => {\n  WebSocket[readyState] = i;\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    /**\n     * Return the listener of the event.\n     *\n     * @return {(Function|undefined)} The event listener or `undefined`\n     * @public\n     */\n    get() {\n      const listeners = this.listeners(method);\n      for (let i = 0; i < listeners.length; i++) {\n        if (listeners[i]._listener) return listeners[i]._listener;\n      }\n\n      return undefined;\n    },\n    /**\n     * Add a listener for the event.\n     *\n     * @param {Function} listener The listener to add\n     * @public\n     */\n    set(listener) {\n      const listeners = this.listeners(method);\n      for (let i = 0; i < listeners.length; i++) {\n        //\n        // Remove only the listeners added via `addEventListener`.\n        //\n        if (listeners[i]._listener) this.removeListener(method, listeners[i]);\n      }\n      this.addEventListener(method, listener);\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|url.URL)} address The URL to which to connect\n * @param {String} protocols The subprotocols\n * @param {Object} options Connection options\n * @param {(Boolean|Object)} options.perMessageDeflate Enable/disable\n *     permessage-deflate\n * @param {Number} options.handshakeTimeout Timeout in milliseconds for the\n *     handshake request\n * @param {Number} options.protocolVersion Value of the `Sec-WebSocket-Version`\n *     header\n * @param {String} options.origin Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {Number} options.maxPayload The maximum allowed message size\n * @param {Boolean} options.followRedirects Whether or not to follow redirects\n * @param {Number} options.maxRedirects The maximum number of redirects allowed\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    createConnection: undefined,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: undefined,\n    auth: undefined,\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n    websocket.url = address.href;\n  } else {\n    parsedUrl = new URL(address);\n    websocket.url = address;\n  }\n\n  const isUnixSocket = parsedUrl.protocol === 'ws+unix:';\n\n  if (!parsedUrl.host && (!isUnixSocket || !parsedUrl.pathname)) {\n    throw new Error(`Invalid URL: ${websocket.url}`);\n  }\n\n  const isSecure =\n    parsedUrl.protocol === 'wss:' || parsedUrl.protocol === 'https:';\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const get = isSecure ? https.get : http.get;\n  let perMessageDeflate;\n\n  opts.createConnection = isSecure ? tlsConnect : netConnect;\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket',\n    ...opts.headers\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols) {\n    opts.headers['Sec-WebSocket-Protocol'] = protocols;\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isUnixSocket) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req = (websocket._req = get(opts));\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (websocket._req.aborted) return;\n\n    req = websocket._req = null;\n    websocket.readyState = WebSocket.CLOSING;\n    websocket.emit('error', err);\n    websocket.emitClose();\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      const addr = new URL(location, address);\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the `upgrade`\n    // event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    const protList = (protocols || '').split(/, */);\n    let protError;\n\n    if (!protocols && serverProt) {\n      protError = 'Server sent a subprotocol but none was requested';\n    } else if (protocols && !serverProt) {\n      protError = 'Server sent no subprotocol';\n    } else if (serverProt && !protList.includes(serverProt)) {\n      protError = 'Server sent an invalid subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket.protocol = serverProt;\n\n    if (perMessageDeflate) {\n      try {\n        const extensions = parse(res.headers['sec-websocket-extensions']);\n\n        if (extensions[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n          websocket._extensions[\n            PerMessageDeflate.extensionName\n          ] = perMessageDeflate;\n        }\n      } catch (err) {\n        abortHandshake(\n          websocket,\n          socket,\n          'Invalid Sec-WebSocket-Extensions header'\n        );\n        return;\n      }\n    }\n\n    websocket.setSocket(socket, head, opts.maxPayload);\n  });\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket)} stream The request to abort or the\n *     socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket.readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream.abort();\n    stream.once('abort', websocket.emitClose.bind(websocket));\n    websocket.emit('error', err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} data The data to send\n * @param {Function} cb Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    cb(err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {String} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._socket.removeListener('data', socketOnData);\n  websocket._socket.resume();\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  this[kWebSocket]._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  websocket._socket.removeListener('data', socketOnData);\n\n  websocket.readyState = WebSocket.CLOSING;\n  websocket._closeCode = err[kStatusCode];\n  websocket.emit('error', err);\n  websocket._socket.destroy();\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {(String|Buffer|ArrayBuffer|Buffer[])} data The message\n * @private\n */\nfunction receiverOnMessage(data) {\n  this[kWebSocket].emit('message', data);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  websocket.pong(data, !websocket._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * The listener of the `net.Socket` `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('end', socketOnEnd);\n\n  websocket.readyState = WebSocket.CLOSING;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk and emitted synchronously in a single\n  // `'data'` event.\n  //\n  websocket._socket.read();\n  websocket._receiver.end();\n\n  this.removeListener('data', socketOnData);\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket.readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the `net.Socket` `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket.readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n","module.exports = require(\"crypto\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"path\");","module.exports = require(\"stream\");","module.exports = require(\"tls\");","module.exports = require(\"url\");","module.exports = require(\"vscode\");","module.exports = require(\"zlib\");"],"sourceRoot":""}